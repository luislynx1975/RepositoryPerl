DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`ASIENTO_AUTOBUS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`ASIENTO_AUTOBUS`()
BEGIN

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`CAMBIAR_BOLETOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`CAMBIAR_BOLETOS`(
IN _TRAB_ID_ACTUAL VARCHAR(10),
IN _TRAB_ID_NUEVO VARCHAR(10),
IN _FOLIO_INICIAL INTEGER,
IN _FOLIO_FINAL INTEGER,
IN _TAQUILLA INTEGER

)
BEGIN
 DECLARE done INT DEFAULT 0;
 DECLARE _ID_BOLETO INTEGER;
 DECLARE _MAXIMO INTEGER;

 DECLARE CUR CURSOR FOR SELECT ID_BOLETO
                        FROM PDV_T_BOLETO WHERE TRAB_ID = _TRAB_ID_ACTUAL AND
                        ID_BOLETO BETWEEN _FOLIO_INICIAL AND _FOLIO_FINAL;

 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

 OPEN CUR;
   REPEAT
     FETCH CUR INTO _ID_BOLETO;
     IF NOT done THEN
       SELECT MAX(ID_BOLETO)+1 INTO _MAXIMO FROM PDV_T_BOLETO WHERE TRAB_ID = _TRAB_ID_NUEVO;
       UPDATE PDV_T_BOLETO SET TRAB_ID = _TRAB_ID_NUEVO, ID_BOLETO = _MAXIMO
       WHERE ID_BOLETO = _ID_BOLETO AND TRAB_ID = _TRAB_ID_ACTUAL AND ID_TAQUILLA = _TAQUILLA;


       



     END IF;
   UNTIL done END REPEAT;
 CLOSE  CUR;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`CAMBIAR_ESQUEMA_DIAS_POR_TERMINAL`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`CAMBIAR_ESQUEMA_DIAS_POR_TERMINAL`()
BEGIN
 DECLARE done INT DEFAULT 0;
 DECLARE _CORRIDA VARCHAR(10);
 DECLARE _LUNES VARCHAR(1);
 DECLARE _MARTES VARCHAR(1);
 DECLARE _MIERCOLES VARCHAR(1);
 DECLARE _JUEVES VARCHAR(1);
 DECLARE _VIERNES VARCHAR(1);
 DECLARE _SABADO VARCHAR(1);
 DECLARE _DOMINGO VARCHAR(1);
 DECLARE CUR_MAESTRO CURSOR FOR SELECT ID_CORRIDA, LUNES, MARTES, MIERCOLES,
                                JUEVES, VIERNES, SABADO, DOMINGO
                                FROM PDV_C_ITINERARIO;


  DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

 
 ALTER TABLE `PDV_C_ITINERARIO_D`
 ADD COLUMN `LUNES` VARCHAR(1) NOT NULL DEFAULT 'F' AFTER `PIE`,
 ADD COLUMN `MARTES` VARCHAR(1) NOT NULL DEFAULT 'F' AFTER `LUNES`,
 ADD COLUMN `MIERCOLES` VARCHAR(1) NOT NULL DEFAULT 'F' AFTER `MARTES`,
 ADD COLUMN `JUEVES` VARCHAR(1) NOT NULL DEFAULT 'F' AFTER `MIERCOLES`,
 ADD COLUMN `VIERNES` VARCHAR(1) NOT NULL DEFAULT 'F' AFTER `JUEVES`,
 ADD COLUMN `SABADO` VARCHAR(1) NOT NULL DEFAULT 'F' AFTER `VIERNES`,
 ADD COLUMN `DOMINGO` VARCHAR(1) NOT NULL DEFAULT 'F' AFTER `SABADO`;

 
 OPEN CUR_MAESTRO;
 REPEAT
   FETCH CUR_MAESTRO INTO _CORRIDA, _LUNES, _MARTES, _MIERCOLES, _JUEVES, _VIERNES, _SABADO, _DOMINGO;
   IF NOT done THEN
     UPDATE PDV_C_ITINERARIO_D SET
     LUNES = _LUNES,
     MARTES = _MARTES,
     MIERCOLES = _MIERCOLES,
     JUEVES = _JUEVES,
     VIERNES = _VIERNES,
     SABADO = _SABADO,
     DOMINGO = _DOMINGO
     WHERE
     ID_CORRIDA = _CORRIDA;
   END IF;
 UNTIL done END REPEAT;
 CLOSE CUR_MAESTRO;

 
 ALTER TABLE `PDV_C_ITINERARIO`
 DROP COLUMN `LUNES`,
 DROP COLUMN `MARTES`,
 DROP COLUMN `MIERCOLES`,
 DROP COLUMN `JUEVES`,
 DROP COLUMN `VIERNES`,
 DROP COLUMN `SABADO`,
 DROP COLUMN `DOMINGO`;


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`GETCOORDENADAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`GETCOORDENADAS`(IN BUS INTEGER)
BEGIN
    SELECT ASIENTO, X, Y
    FROM PDV_C_TIPO_AUTOBUS_D
    WHERE ID_TIPO_AUTOBUS = BUS
    ORDER BY ASIENTO ;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`INSERTA_ASIENTOS_ANTICIPADOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`INSERTA_ASIENTOS_ANTICIPADOS`()
BEGIN
 DECLARE done INT DEFAULT 0;

 DECLARE fTRAB_ID VARCHAR(10);
 DECLARE fORIGEN  VARCHAR(10);
 DECLARE fDESTINO VARCHAR(10);
 DECLARE fID_CORRIDA VARCHAR (10);
 DECLARE fHORA TIME;
 DECLARE fFECHA DATETIME;
 DECLARE fNO_ASIENTO INT;
 DECLARE CUANTOS INT;



 DECLARE CUR01 CURSOR FOR SELECT  TRAB_ID, ORIGEN, DESTINO, B.ID_CORRIDA, C.HORA, B.FECHA, NO_ASIENTO
                          FROM PDV_T_BOLETO AS B LEFT OUTER JOIN PDV_T_CORRIDA AS C ON B.ID_CORRIDA = C.ID_CORRIDA
                          AND B.FECHA = C.FECHA
                          WHERE B.FECHA >= '2010-10-16'
                          AND ESTATUS = 'V';

 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;



 OPEN CUR01;
 REPEAT
   FETCH CUR01 INTO fTRAB_ID, fORIGEN, fDESTINO, fID_CORRIDA,  fHORA, fFECHA,   fNO_ASIENTO;
   IF NOT done THEN



     SELECT COUNT(*) INTO CUANTOS FROM PDV_T_ASIENTO
     WHERE ID_CORRIDA = fID_CORRIDA
     AND FECHA_HORA_CORRIDA = ADDTIME(fFECHA, fHORA)
     AND NO_ASIENTO = fNO_ASIENTO;

     IF NOT CUANTOS THEN


       INSERT INTO PDV_T_ASIENTO(ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO, TRAB_ID, ORIGEN, DESTINO, STATUS)
       VALUES(
       fID_CORRIDA,
        ADDTIME(fFECHA, fHORA),
       fNO_ASIENTO,
       'REC.',
       fTRAB_ID,
       fORIGEN,
       fDESTINO,
       'V');
     END IF;


   END IF;
 UNTIL done END REPEAT;
 CLOSE  CUR01;



END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`MIO_PDV_PROCESA_CORTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`MIO_PDV_PROCESA_CORTE`(IN _FOLIO_CORTE INTEGER, IN _TERMINAL VARCHAR(10), IN  _CAJERO VARCHAR(10))
BEGIN


DECLARE  EMPLEADO  VARCHAR(10); 
DECLARE FECHA1 DATETIME; 
DECLARE FECHA2 DATETIME; 
DECLARE DESCUENTO INTEGER; 
DECLARE _IMPORTE_BOLETOS_EFECTIVO REAL; 
DECLARE _IMPORTE_RECOLECCIONES    REAL; 
DECLARE _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO REAL; 
DECLARE _IMPORTE_FONDO_INICIAL REAL;   
DECLARE _ENTREGA_EFECTIVO REAL; 
DECLARE _ENTREGA_RECOLECCIONES REAL; 
DECLARE _TOTAL_RECOLECCIONES INT; 
DECLARE _TOTAL_BOLETOS_CANCELADOS_EFECTIVO INT; 
DECLARE _TOTAL_IMPORTE_BOLETOS_IXE REAL;


DECLARE  EFECTIVO_ANTES REAL;
DECLARE  RECOLECCIONES_ANTES REAL;
DECLARE  TOTAL_RECOLECCIONES_ANTES INT;
DECLARE  CANCELADOS_ANTES INT;



DECLARE ASIGNA_EMPLEADO CURSOR FOR SELECT ID_EMPLEADO
                                   FROM  PDV_T_CORTE
                                   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE ASIGNA_FECHAS CURSOR FOR SELECT FECHA_INICIO, FECHA_FIN
                                 FROM  PDV_T_CORTE
                                 WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE IMPORTE_BOLETOS_EFECTIVO CURSOR FOR SELECT      COALESCE(SUM(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN
                                          ( SELECT ID_FORMA_PAGO
                                            FROM PDV_C_FORMA_PAGO
                                            WHERE SUMA_EFECTIVO_COBRO  = 1 )
                                          AND ID_TERMINAL = _TERMINAL;


DECLARE IMPORTE_RECOLECCIONES    CURSOR FOR SELECT      COALESCE(SUM(IMPORTE),0)
                                          FROM PDV_T_RECOLECCION
                                          WHERE FECHA_HORA BETWEEN FECHA1 AND FECHA2 AND ID_EMPLEADO = EMPLEADO
                                          AND ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE IMPORTE_BOLETOS_CANCELADOS_EFECTIVO CURSOR FOR SELECT COALESCE(SUM(TARIFA),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          AND B.ID_FORMA_PAGO
                                                                         IN
                                                                           ( SELECT ID_FORMA_PAGO
                                                                             FROM PDV_C_FORMA_PAGO
                                                                             WHERE SUMA_EFECTIVO_COBRO  =1 )
                                                          AND C.TRAB_ID = B.TRAB_ID;




DECLARE TOTAL_BOLETOS_CANCELADOS_EFECTIVO CURSOR FOR SELECT COALESCE(COUNT(*),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO
                                                       AND B.ID_TERMINAL = C.ID_TERMINAL)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          
                                                                         
                                                                         
                                                                         
                                                                         
                                                          AND C.TRAB_ID = B.TRAB_ID;


DECLARE IMPORTE_FONDO_INICIAL CURSOR FOR SELECT COALESCE(FONDO_INICIAL,0) FROM PDV_T_CORTE
                                         WHERE ID_CORTE= _FOLIO_CORTE
                                         AND ID_TERMINAL = _TERMINAL;


DECLARE TOTAL_RECOLECCIONES CURSOR FOR SELECT  COALESCE(COUNT(*),0)
                                          FROM PDV_T_RECOLECCION
                                          WHERE FECHA_HORA BETWEEN FECHA1 AND FECHA2 AND ID_EMPLEADO = EMPLEADO
                                          AND ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;



DECLARE _EFECTIVO_ANTES CURSOR FOR SELECT COALESCE(MAX(ENTREGA),0) FROM PDV_CORTE_D WHERE TIPO = 'EFECTIVO'
                                   AND ID_TERMINAL= _TERMINAL AND ID_CORTE= _FOLIO_CORTE;

DECLARE _CANCELADOS_ANTES CURSOR FOR SELECT COALESCE(MAX(ENTREGA),0) FROM PDV_CORTE_D WHERE ID_TERMINAL = _TERMINAL
                                   AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'CANCELADOS';

DECLARE _RECOLECCIONES_ANTES CURSOR FOR SELECT COALESCE(MAX(ENTREGA),0) FROM PDV_CORTE_D WHERE ID_TERMINAL = _TERMINAL
                                   AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'RECOLECCIONES';

DECLARE _TOTAL_RECOLECCIONES_ANTES CURSOR FOR SELECT COALESCE(MAX(ENTREGA),0) FROM PDV_CORTE_D WHERE ID_TERMINAL = _TERMINAL
                                   AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'TOTAL_RECOLECCIONES';

DECLARE IMPORTE_BOLETOS_IXE CURSOR FOR SELECT      COALESCE(SUM(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN ( 2 )
                                          AND ID_TERMINAL = _TERMINAL AND ESTATUS_PROCESADO='V';





   OPEN ASIGNA_EMPLEADO; 
   FETCH ASIGNA_EMPLEADO INTO EMPLEADO; 

   OPEN ASIGNA_FECHAS; 
   FETCH ASIGNA_FECHAS INTO FECHA1, FECHA2; 

   
   
   
   
   

   
   
   OPEN IMPORTE_BOLETOS_EFECTIVO;
   FETCH IMPORTE_BOLETOS_EFECTIVO INTO _IMPORTE_BOLETOS_EFECTIVO;
   
   OPEN IMPORTE_RECOLECCIONES;
   FETCH IMPORTE_RECOLECCIONES INTO _IMPORTE_RECOLECCIONES;
   
   OPEN IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   FETCH IMPORTE_BOLETOS_CANCELADOS_EFECTIVO INTO _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   
   OPEN TOTAL_BOLETOS_CANCELADOS_EFECTIVO; 
   FETCH  TOTAL_BOLETOS_CANCELADOS_EFECTIVO INTO _TOTAL_BOLETOS_CANCELADOS_EFECTIVO; 
   
   OPEN  IMPORTE_FONDO_INICIAL;
   FETCH IMPORTE_FONDO_INICIAL INTO _IMPORTE_FONDO_INICIAL;
   
   OPEN TOTAL_RECOLECCIONES;
   FETCH TOTAL_RECOLECCIONES INTO _TOTAL_RECOLECCIONES;

   
   

   IF _IMPORTE_BOLETOS_EFECTIVO <= _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO THEN

      SET _ENTREGA_EFECTIVO =   _IMPORTE_FONDO_INICIAL + _IMPORTE_BOLETOS_EFECTIVO - _IMPORTE_RECOLECCIONES - _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;


   ELSEIF _IMPORTE_BOLETOS_EFECTIVO > _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO THEN

      SET _ENTREGA_EFECTIVO =  _IMPORTE_FONDO_INICIAL  + _IMPORTE_BOLETOS_EFECTIVO - _IMPORTE_RECOLECCIONES -  _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;

   END IF;

   


   OPEN _EFECTIVO_ANTES;
   FETCH _EFECTIVO_ANTES INTO EFECTIVO_ANTES;

   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'EFECTIVO';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE,    ENTREGA,         SISTEMA,           TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, EFECTIVO_ANTES,  _ENTREGA_EFECTIVO, 'EFECTIVO', NULL,        NULL);



   
   UPDATE  PDV_T_BOLETO
   SET ESTATUS_PROCESADO = ESTATUS
   WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
   AND ID_TERMINAL = _TERMINAL;

  

   CALL PDV_REGRESA_CANCELADOS(FECHA1, FECHA2, EMPLEADO, _TERMINAL);



 OPEN IMPORTE_BOLETOS_IXE;
   FETCH IMPORTE_BOLETOS_IXE INTO _TOTAL_IMPORTE_BOLETOS_IXE;

      
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'IMPORTE_IXES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _TOTAL_IMPORTE_BOLETOS_IXE, 'IMPORTE_IXES', NULL,        NULL);









   
   OPEN  _CANCELADOS_ANTES;
   FETCH _CANCELADOS_ANTES INTO CANCELADOS_ANTES;


   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'CANCELADOS';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO, ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, CANCELADOS_ANTES, _TOTAL_BOLETOS_CANCELADOS_EFECTIVO,  'CANCELADOS', NULL,   NULL);



   

   OPEN  _RECOLECCIONES_ANTES;
   FETCH _RECOLECCIONES_ANTES INTO RECOLECCIONES_ANTES;

   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'RECOLECCIONES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA,              SISTEMA,                  TIPO,           ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                _TERMINAL, _FOLIO_CORTE, RECOLECCIONES_ANTES, _IMPORTE_RECOLECCIONES , 'RECOLECCIONES', NULL,NULL);

   

   OPEN  _TOTAL_RECOLECCIONES_ANTES;
   FETCH _TOTAL_RECOLECCIONES_ANTES INTO TOTAL_RECOLECCIONES_ANTES;

   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'TOTAL_RECOLECCIONES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, TOTAL_RECOLECCIONES_ANTES, _TOTAL_RECOLECCIONES, 'TOTAL_RECOLECCIONES', NULL,        NULL);


   
   
   CALL MIO_PDV_PROCESA_CORTE_FORMAS_PAGO(_FOLIO_CORTE , _TERMINAL,FECHA1,FECHA2,EMPLEADO);


   
   
   CALL MIO_PDV_PROCESA_CORTE_DESCUENTOS(_FOLIO_CORTE , _TERMINAL,FECHA1,FECHA2,EMPLEADO);


    
   UPDATE PDV_T_CORTE
   SET ESTATUS= 'F'
   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS = 'P'; 

   UPDATE PDV_T_CORTE
   SET ID_CAJERO = _CAJERO
   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS = 'F';

   
   CLOSE  ASIGNA_EMPLEADO;
   CLOSE  ASIGNA_FECHAS;
   CLOSE IMPORTE_BOLETOS_EFECTIVO;
   CLOSE IMPORTE_RECOLECCIONES;
   CLOSE IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   CLOSE IMPORTE_FONDO_INICIAL;
   CLOSE TOTAL_RECOLECCIONES;
   CLOSE TOTAL_BOLETOS_CANCELADOS_EFECTIVO;

   CLOSE _EFECTIVO_ANTES;
   CLOSE _CANCELADOS_ANTES;
   CLOSE _RECOLECCIONES_ANTES;
   CLOSE _TOTAL_RECOLECCIONES_ANTES;
CLOSE IMPORTE_BOLETOS_IXE;

   SELECT *
   FROM PDV_CORTE_D
   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`MIO_PDV_PROCESA_CORTE_DESCUENTOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`MIO_PDV_PROCESA_CORTE_DESCUENTOS`(IN _FOLIO_CORTE INT, IN _TERMINAL VARCHAR (10) ,
                                                                     IN _FECHA1 DATETIME,  IN _FECHA2 DATETIME,
                                                                     IN _EMPLEADO VARCHAR(10))
BEGIN

DECLARE OCUPANTES_ANTES INT;
DECLARE ID_DESCUENTO INTEGER; 
DECLARE done INT DEFAULT 0;



DECLARE DESCUENTOS CURSOR FOR SELECT ID_OCUPANTE
                              FROM PDV_C_OCUPANTE
                              WHERE ID_OCUPANTE <> 1 AND FECHA_BAJA IS NULL
                              ORDER BY ID_OCUPANTE;



DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;



        
   OPEN DESCUENTOS; 
   REPEAT

      FETCH  DESCUENTOS INTO ID_DESCUENTO;

      SELECT COALESCE(ENTREGA,0) INTO OCUPANTES_ANTES
      FROM PDV_CORTE_D
      WHERE ID_TERMINAL= _TERMINAL AND  ID_CORTE = _FOLIO_CORTE AND TIPO = 'DESCUENTO'
      AND ID_OCUPANTE = ID_DESCUENTO;


      DELETE   FROM   PDV_CORTE_D
      WHERE ID_TERMINAL= _TERMINAL AND  ID_CORTE = _FOLIO_CORTE AND TIPO = 'DESCUENTO' AND ID_OCUPANTE = ID_DESCUENTO;



      INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO, ID_OCUPANTE)
      SELECT _TERMINAL, _FOLIO_CORTE, OCUPANTES_ANTES, COALESCE(COUNT(*),0), 'DESCUENTO',ID_DESCUENTO
      FROM PDV_T_BOLETO
      WHERE FECHA_HORA_BOLETO BETWEEN _FECHA1 AND _FECHA2 AND TRAB_ID = _EMPLEADO AND ID_OCUPANTE = ID_DESCUENTO
      AND ESTATUS_PROCESADO = 'V' AND ID_TERMINAL= _TERMINAL;

   UNTIL done END REPEAT;

   CLOSE DESCUENTOS;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`MIO_PDV_PROCESA_CORTE_FORMAS_PAGO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`MIO_PDV_PROCESA_CORTE_FORMAS_PAGO`(IN _FOLIO_CORTE INT, IN _TERMINAL VARCHAR (10) ,
                                                                     IN _FECHA1 DATETIME,  IN _FECHA2 DATETIME,
                                                                     IN _EMPLEADO VARCHAR(10))
BEGIN


DECLARE TOTAL_FORMAS_ANTES INT;
DECLARE FORMA_PAGO INTEGER;
DECLARE done INT DEFAULT 0;



DECLARE FORMAS_DE_PAGO CURSOR FOR
   SELECT  ID_FORMA_PAGO
   FROM PDV_C_FORMA_PAGO
   WHERE ID_FORMA_PAGO <> 1  AND FECHA_BAJA IS NULL;


DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;




   OPEN FORMAS_DE_PAGO;
   REPEAT

      FETCH  FORMAS_DE_PAGO INTO FORMA_PAGO;

      SELECT COALESCE(ENTREGA,0) INTO TOTAL_FORMAS_ANTES FROM PDV_CORTE_D
                     WHERE ID_TERMINAL = _TERMINAL AND TIPO = 'FORMAS_DE_PAGO' AND
                     ID_FORMA_PAGO = FORMA_PAGO  AND ID_CORTE = _FOLIO_CORTE;

      DELETE FROM  PDV_CORTE_D
      WHERE ID_TERMINAL = _TERMINAL AND TIPO = 'FORMAS_DE_PAGO' AND
                     ID_FORMA_PAGO = FORMA_PAGO  AND ID_CORTE = _FOLIO_CORTE;


      INSERT INTO PDV_CORTE_D
      (ID_TERMINAL, ID_CORTE,    ENTREGA,             SISTEMA,               TIPO,            ID_FORMA_PAGO)
      SELECT
      _TERMINAL,   _FOLIO_CORTE, TOTAL_FORMAS_ANTES, COALESCE(COUNT(*),0), 'FORMAS_DE_PAGO', FORMA_PAGO
      FROM PDV_T_BOLETO
      WHERE FECHA_HORA_BOLETO BETWEEN _FECHA1 AND _FECHA2 AND TRAB_ID = _EMPLEADO AND ID_FORMA_PAGO = FORMA_PAGO
      AND ESTATUS_PROCESADO = 'V' AND ID_TERMINAL = _TERMINAL;

   UNTIL done END REPEAT;

   CLOSE FORMAS_DE_PAGO;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`NEW_OCUPANTES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`NEW_OCUPANTES`(IN IN_TERMINAL VARCHAR(5), IN IN_FECHA DATE, IN IN_CORRIDA INTEGER, IN IN_SERVICIO INTEGER, IN IN_BUS INTEGER, IN IN_RUTA INTEGER)
BEGIN
    DECLARE DIA_INICIO, DIA_FINAL DATE;

    SELECT FECHA_INICIO, FECHA_FIN INTO DIA_INICIO, DIA_FINAL FROM PDV_C_PERIODO_VACACIONAL;

    IF ((DIA_INICIO >= IN_FECHA) AND (DIA_FINAL <= IN_FECHA)) THEN
        SELECT O.DESCRIPCION, (IO.MAXIMO - COALESCE(
                        (SELECT COUNT(B.ID_OCUPANTE)
                        FROM PDV_T_BOLETO B INNER JOIN PDV_T_CORRIDA C ON B.ID_CORRIDA = C.ID_CORRIDA AND
                                                                          B.FECHA = C.FECHA
                        WHERE B.ID_CORRIDA = I.ID_CORRIDA AND B.ID_TERMINAL = D.ID_TERMINAL AND B.FECHA = IN_FECHA AND
                              O.ABREVIACION = B.TIPO_TARIFA
                        GROUP BY B.ID_OCUPANTE),0)) AS TOTAL
        FROM PDV_C_ITINERARIO I INNER JOIN PDV_C_ITINERARIO_D D ON I.ID_CORRIDA = D.ID_CORRIDA
                                INNER JOIN PDV_C_ITINERARIO_OCUPANTE IO ON IO.ID_TERMINAL = D.ID_TERMINAL AND
                                                                           IO.ID_CORRIDA  = D.ID_CORRIDA
                                INNER JOIN PDV_C_OCUPANTE O ON O.ID_OCUPANTE = IO.ID_OCUPANTE
        WHERE I.ID_CORRIDA = IN_CORRIDA AND I.TIPOSERVICIO = IN_SERVICIO AND ID_TIPO_AUTOBUS = IN_BUS AND I.ID_RUTA = IN_RUTA AND
              D.ID_TERMINAL = IN_TERMINAL;
    ELSE
        SELECT O.DESCRIPCION, (0) AS TOTAL
        FROM PDV_C_ITINERARIO I INNER JOIN PDV_C_ITINERARIO_D D ON I.ID_CORRIDA = D.ID_CORRIDA
                                INNER JOIN PDV_C_ITINERARIO_OCUPANTE IO ON IO.ID_TERMINAL = D.ID_TERMINAL AND
                                                                           IO.ID_CORRIDA  = D.ID_CORRIDA
                                INNER JOIN PDV_C_OCUPANTE O ON O.ID_OCUPANTE = IO.ID_OCUPANTE
        WHERE I.ID_CORRIDA = IN_CORRIDA AND I.TIPOSERVICIO = IN_SERVICIO AND ID_TIPO_AUTOBUS = IN_BUS AND I.ID_RUTA = IN_RUTA AND
              D.ID_TERMINAL = IN_TERMINAL;
    END IF;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_ACTUALIZAR_USUARIOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_ACTUALIZAR_USUARIOS`()
BEGIN
 DECLARE done INT DEFAULT 0;
 DECLARE FTRAB_ID VARCHAR(10);
 DECLARE FNOMBRE VARCHAR(100);
 DECLARE FPUESTO_ID INT;

 DECLARE CUR_NUEVOS CURSOR FOR SELECT TRAB_ID, CONCAT_WS(' ',NOMBRES, PATERNO, MATERNO) AS NOMBRE, PUESTO_ID
                               FROM EMPLEADOS WHERE TIPO_EMPLEADO < 100
                               AND PUESTO_ID IN(SELECT ID_GRUPO FROM PDV_C_GRUPO_USUARIO
                               WHERE FECHA_BAJA IS NULL) AND TRAB_ID NOT IN
                               (SELECT TRAB_ID FROM PDV_C_USUARIO WHERE FECHA_BAJA IS NULL)
                               AND STATUS = 'ACTIVO';


 DECLARE CUR_BAJAS CURSOR FOR SELECT TRAB_ID FROM EMPLEADOS WHERE TIPO_EMPLEADO < 100
                              AND PUESTO_ID IN(SELECT ID_GRUPO FROM PDV_C_GRUPO_USUARIO WHERE FECHA_BAJA IS NULL)
                              AND TRAB_ID NOT IN (SELECT TRAB_ID FROM PDV_C_USUARIO WHERE FECHA_BAJA IS NOT NULL)
                              AND TRAB_ID IN (SELECT TRAB_ID FROM PDV_C_USUARIO)
                              AND STATUS = 'BAJA';

 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

 OPEN CUR_BAJAS;
 REPEAT
   FETCH CUR_BAJAS INTO FTRAB_ID;
   IF NOT done THEN
   
     UPDATE PDV_C_USUARIO SET FECHA_BAJA = NOW() WHERE TRAB_ID = FTRAB_ID;
   END IF;
 UNTIL done END REPEAT;
 CLOSE  CUR_BAJAS;


 SET done = 0;
 OPEN CUR_NUEVOS;
 REPEAT
   FETCH CUR_NUEVOS INTO FTRAB_ID, FNOMBRE, FPUESTO_ID;
   IF NOT done THEN
     
     INSERT INTO PDV_C_USUARIO(TRAB_ID, ID_GRUPO, PASSWORD, NOMBRE, FECHA_PASSWORD)
     VALUES(FTRAB_ID, FPUESTO_ID, FTRAB_ID, FNOMBRE, NOW());
   END IF;
 UNTIL done END REPEAT;
 CLOSE  CUR_NUEVOS;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_AUDITA_CORTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_AUDITA_CORTE`(IN _FOLIO_CORTE INTEGER, IN _TERMINAL VARCHAR(10), IN  _CAJERO VARCHAR(10))
BEGIN


DECLARE  EMPLEADO  VARCHAR(10); 
DECLARE FECHA1 DATETIME; 
DECLARE FECHA2 DATETIME; 
DECLARE DESCUENTO INTEGER; 
DECLARE _IMPORTE_BOLETOS_EFECTIVO REAL; 
DECLARE _IMPORTE_RECOLECCIONES    REAL; 
DECLARE _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO REAL; 
DECLARE _IMPORTE_FONDO_INICIAL REAL;   
DECLARE _ENTREGA_EFECTIVO REAL; 
DECLARE _ENTREGA_RECOLECCIONES REAL; 
DECLARE _TOTAL_RECOLECCIONES INT; 
DECLARE _TOTAL_BOLETOS_CANCELADOS_EFECTIVO INT; 
DECLARE _TOTAL_IMPORTE_BOLETOS_IXE REAL; 

DECLARE ASIGNA_EMPLEADO CURSOR FOR SELECT ID_EMPLEADO
                                   FROM  PDV_T_CORTE
                                   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE ASIGNA_FECHAS CURSOR FOR SELECT FECHA_INICIO, FECHA_FIN
                                 FROM  PDV_T_CORTE
                                 WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE IMPORTE_BOLETOS_EFECTIVO CURSOR FOR SELECT      COALESCE(SUM(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN
                                          ( SELECT ID_FORMA_PAGO
                                            FROM PDV_C_FORMA_PAGO
                                            WHERE SUMA_EFECTIVO_COBRO  = 1 )
                                          AND ID_TERMINAL = _TERMINAL;


DECLARE IMPORTE_RECOLECCIONES    CURSOR FOR SELECT      COALESCE(SUM(IMPORTE),0)
                                          FROM PDV_T_RECOLECCION
                                          WHERE FECHA_HORA BETWEEN FECHA1 AND FECHA2 AND ID_EMPLEADO = EMPLEADO
                                          AND ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE IMPORTE_BOLETOS_CANCELADOS_EFECTIVO CURSOR FOR SELECT COALESCE(SUM(TARIFA),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          AND B.ID_FORMA_PAGO
                                                                         IN
                                                                           ( SELECT ID_FORMA_PAGO
                                                                             FROM PDV_C_FORMA_PAGO
                                                                             WHERE SUMA_EFECTIVO_COBRO  =1 )
                                                          AND C.TRAB_ID = B.TRAB_ID;




DECLARE TOTAL_BOLETOS_CANCELADOS_EFECTIVO CURSOR FOR SELECT COALESCE(COUNT(*),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO
                                                       AND B.ID_TERMINAL = C.ID_TERMINAL)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          AND B.ID_FORMA_PAGO
                                                                         
                                                                         
                                                                         
                                                                         
                                                          AND C.TRAB_ID = B.TRAB_ID;


DECLARE IMPORTE_FONDO_INICIAL CURSOR FOR SELECT COALESCE(FONDO_INICIAL,0) FROM PDV_T_CORTE
                                         WHERE ID_CORTE= _FOLIO_CORTE
                                         AND ID_TERMINAL = _TERMINAL;


DECLARE TOTAL_RECOLECCIONES CURSOR FOR SELECT  COALESCE(COUNT(*),0)
                                          FROM PDV_T_RECOLECCION
                                          WHERE FECHA_HORA BETWEEN FECHA1 AND FECHA2 AND ID_EMPLEADO = EMPLEADO
                                          AND ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE IMPORTE_BOLETOS_IXE CURSOR FOR SELECT      COALESCE(SUM(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN ( 2 )
                                          AND ID_TERMINAL = _TERMINAL AND ESTATUS_PROCESADO='V';



UPDATE PDV_T_CORTE
SET FECHA_FIN = NOW()
WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS IN ( 'P','A','S'); 

   OPEN ASIGNA_EMPLEADO; 
   FETCH ASIGNA_EMPLEADO INTO EMPLEADO; 

   OPEN ASIGNA_FECHAS; 
   FETCH ASIGNA_FECHAS INTO FECHA1, FECHA2; 

   
   
   
   
   

   
   
   OPEN IMPORTE_BOLETOS_EFECTIVO;
   FETCH IMPORTE_BOLETOS_EFECTIVO INTO _IMPORTE_BOLETOS_EFECTIVO;
   
   OPEN IMPORTE_RECOLECCIONES;
   FETCH IMPORTE_RECOLECCIONES INTO _IMPORTE_RECOLECCIONES;
   
   OPEN IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   FETCH IMPORTE_BOLETOS_CANCELADOS_EFECTIVO INTO _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   
   OPEN TOTAL_BOLETOS_CANCELADOS_EFECTIVO; 
   FETCH  TOTAL_BOLETOS_CANCELADOS_EFECTIVO INTO _TOTAL_BOLETOS_CANCELADOS_EFECTIVO; 
   
   OPEN  IMPORTE_FONDO_INICIAL;
   FETCH IMPORTE_FONDO_INICIAL INTO _IMPORTE_FONDO_INICIAL;
   
   OPEN TOTAL_RECOLECCIONES;
   FETCH TOTAL_RECOLECCIONES INTO _TOTAL_RECOLECCIONES;
   
   OPEN IMPORTE_BOLETOS_IXE;
   FETCH IMPORTE_BOLETOS_IXE INTO _TOTAL_IMPORTE_BOLETOS_IXE;

   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'EFECTIVO';

   IF _IMPORTE_BOLETOS_EFECTIVO <= _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO THEN

      SET _ENTREGA_EFECTIVO =   _IMPORTE_FONDO_INICIAL + _IMPORTE_BOLETOS_EFECTIVO - _IMPORTE_RECOLECCIONES - _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;


   ELSEIF _IMPORTE_BOLETOS_EFECTIVO > _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO THEN

      SET _ENTREGA_EFECTIVO =  _IMPORTE_FONDO_INICIAL  + _IMPORTE_BOLETOS_EFECTIVO - _IMPORTE_RECOLECCIONES -  _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;

   END IF;

   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'EFECTIVO';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _ENTREGA_EFECTIVO, 'EFECTIVO', NULL,        NULL);



   
   UPDATE  PDV_T_BOLETO
   SET ESTATUS_PROCESADO = ESTATUS
   WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
   AND ID_TERMINAL = _TERMINAL;

  

   CALL PDV_REGRESA_CANCELADOS(FECHA1, FECHA2, EMPLEADO, _TERMINAL);


   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'CANCELADOS';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO, ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _TOTAL_BOLETOS_CANCELADOS_EFECTIVO,  'CANCELADOS', NULL,   NULL);

   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'IMPORTE_IXES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _TOTAL_IMPORTE_BOLETOS_IXE, 'IMPORTE_IXES', NULL,        NULL);


   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'RECOLECCIONES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO, ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES( _TERMINAL, _FOLIO_CORTE, 0, _IMPORTE_RECOLECCIONES , 'RECOLECCIONES', NULL,NULL);

   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'TOTAL_RECOLECCIONES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _TOTAL_RECOLECCIONES, 'TOTAL_RECOLECCIONES', NULL,        NULL);


   
   
   CALL PDV_PROCESA_CORTE_FORMAS_PAGO(_FOLIO_CORTE , _TERMINAL,FECHA1,FECHA2,EMPLEADO);



   
   
   CALL PDV_PROCESA_CORTE_DESCUENTOS(_FOLIO_CORTE , _TERMINAL,FECHA1,FECHA2,EMPLEADO);


    
   UPDATE PDV_T_CORTE
   SET ESTATUS= 'F'
   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS IN ( 'P','A','S'); 

   UPDATE PDV_T_CORTE
   SET ID_CAJERO = _CAJERO
   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS = 'F';

   
   CLOSE  ASIGNA_EMPLEADO;
   CLOSE  ASIGNA_FECHAS;
   CLOSE IMPORTE_BOLETOS_EFECTIVO;
   CLOSE IMPORTE_RECOLECCIONES;
   CLOSE IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   CLOSE IMPORTE_FONDO_INICIAL;
   CLOSE TOTAL_RECOLECCIONES;
   CLOSE TOTAL_BOLETOS_CANCELADOS_EFECTIVO;
   CLOSE IMPORTE_BOLETOS_IXE;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_BORRA_CORTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_BORRA_CORTE`(IN _FOLIO_CORTE INTEGER, IN _TERMINAL VARCHAR(10))
BEGIN
   

      UPDATE PDV_T_CORTE
      SET FECHA_FIN = NULL,
      ESTATUS= 'A',
      ID_CAJERO = ''
      WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS = 'F'; 


      DELETE FROM PDV_CORTE_D
      WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE;



END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_BORRA_RUTA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_BORRA_RUTA`(IN _ID_RUTA INTEGER)
BEGIN
    START TRANSACTION WITH CONSISTENT SNAPSHOT;
       DELETE FROM T_C_RUTA   WHERE ID_RUTA = _ID_RUTA;
       DELETE FROM T_C_RUTA_D WHERE ID_RUTA = _ID_RUTA;
    COMMIT;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_BORRA_TRAMOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_BORRA_TRAMOS`(IN ID__RUTA INTEGER)
BEGIN
    DELETE FROM T_C_RUTA_D WHERE ID_RUTA = ID__RUTA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_BORRAR_CORRIDAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_BORRAR_CORRIDAS`(
IN _FECHA_INICIO DATETIME,
IN _FECHA_FIN DATETIME,
IN _ID_CORRIDA VARCHAR(10),
IN _TIPOSERVICIO INTEGER
)
BEGIN


 IF (_ID_CORRIDA = '') AND (_TIPOSERVICIO) = 0 THEN
   DELETE FROM PDV_T_CORRIDA WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN;
   DELETE FROM PDV_T_CORRIDA_D WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN;
   DELETE FROM PDV_T_CORRIDA_OCUPANTE WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN;
 END IF;


 
 IF _ID_CORRIDA <> '' THEN
   DELETE FROM PDV_T_CORRIDA WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN AND ID_CORRIDA = _ID_CORRIDA;
   DELETE FROM PDV_T_CORRIDA_D WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN AND ID_CORRIDA = _ID_CORRIDA;
   DELETE FROM PDV_T_CORRIDA_OCUPANTE WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN AND ID_CORRIDA = _ID_CORRIDA;
 END IF;

 
 IF _TIPOSERVICIO > 0 THEN
   DELETE FROM PDV_T_CORRIDA_OCUPANTE WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN AND ID_CORRIDA IN(
          SELECT ID_CORRIDA FROM PDV_T_CORRIDA WHERE TIPOSERVICIO = _TIPOSERVICIO);
   DELETE FROM PDV_T_CORRIDA_D WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN AND ID_CORRIDA IN(
          SELECT ID_CORRIDA FROM PDV_T_CORRIDA WHERE TIPOSERVICIO = _TIPOSERVICIO);
   DELETE FROM PDV_T_CORRIDA WHERE FECHA BETWEEN _FECHA_INICIO AND _FECHA_FIN AND TIPOSERVICIO = _TIPOSERVICIO;
 END IF;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_BORRAR_ITINERARIO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_BORRAR_ITINERARIO`(
IN _ID_CORRIDA  VARCHAR(10)
)
BEGIN
 
 DELETE FROM PDV_C_ITINERARIO_OCUPANTE WHERE ID_CORRIDA = _ID_CORRIDA;

 
 DELETE FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA;

 
 DELETE FROM PDV_C_ITINERARIO WHERE ID_CORRIDA = _ID_CORRIDA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_CANCELA_PROCESO_CORTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_CANCELA_PROCESO_CORTE`(IN _ID_CORTE INTEGER, IN _TERMINAL VARCHAR(10))
BEGIN
 START TRANSACTION WITH CONSISTENT SNAPSHOT;
   DELETE FROM PDV_CORTE_D WHERE ID_CORTE= _ID_CORTE AND ID_TERMINAL = _TERMINAL;
   UPDATE PDV_T_CORTE
   SET FECHA_FIN = NULL,
       ESTATUS = 'A',
       ID_CAJERO= NULL
   WHERE ID_CORTE= _ID_CORTE AND ID_TERMINAL = _TERMINAL;
 COMMIT;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_CORRIDAS_PARA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_CORRIDAS_PARA`(
IN _ID_TERMINAL VARCHAR(10)

)
BEGIN
 SELECT I.ID_CORRIDA, I.HORA, R.ORIGEN, R.DESTINO, S.ABREVIACION
 FROM PDV_C_ITINERARIO AS I
 LEFT OUTER JOIN T_C_RUTA AS R ON I.ID_RUTA = R.ID_RUTA
 LEFT OUTER JOIN SERVICIOS AS S ON I.TIPOSERVICIO = S.TIPOSERVICIO
 WHERE ID_CORRIDA IN (SELECT DISTINCT(ID_CORRIDA) FROM PDV_C_ITINERARIO_D WHERE ID_TERMINAL = _ID_TERMINAL)
 ORDER BY I.ID_CORRIDA;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_CORTE_TIPO_SERVICIO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_CORTE_TIPO_SERVICIO`(
IN _FECHA_HORA_INICIO DATETIME,
IN _FECHA_HORA_FIN DATETIME,
IN _TERMINAL VARCHAR(10)
)
BEGIN


SELECT ID_CORTE, FECHA_INICIO, FECHA_FIN, FONDO_INICIAL, ID_TAQUILLA,  ID_EMPLEADO, USU.NOMBRE
FROM PDV_T_CORTE AS COR JOIN PDV_C_USUARIO as USU ON (COR.ID_EMPLEADO= USU.TRAB_ID)
WHERE FECHA_INICIO BETWEEN _FECHA_HORA_INICIO AND _FECHA_HORA_FIN AND ID_TERMINAL=_TERMINAL
ORDER BY ID_CORTE ASC;

            
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_CORTE_TIPO_SERVICIO_D`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_CORTE_TIPO_SERVICIO_D`(
IN _TERMINAL VARCHAR(10),
IN _FECHA_INICIAL_CORTE DATETIME,
IN _FECHA_FINAL_CORTE DATETIME,
IN _EMPLEADO_CORTE VARCHAR(10),
IN _ID_CORTE INT,
IN _SERVICIO INT
)
BEGIN

SELECT ((SELECT U.NOMBRE  FROM PDV_C_USUARIO AS U JOIN PDV_T_CORTE AS C ON (C.ID_EMPLEADO=U.TRAB_ID)

WHERE C.ID_CORTE= _ID_CORTE )) AS PROMOTOR,  ((SELECT S.DESCRIPCION  FROM SERVICIOS AS S  WHERE TIPOSERVICIO= _SERVICIO ))

AS SERVICIO,  ((SELECT   COALESCE(sum(BOL.TARIFA),0) as MONTO  from PDV_T_BOLETO AS BOL JOIN PDV_T_CORRIDA

AS COR ON (COR.ID_CORRIDA = BOL.ID_CORRIDA AND  COR.FECHA=BOL.FECHA)  LEFT JOIN SERVICIOS AS SER ON

(COR.TIPOSERVICIO= SER.TIPOSERVICIO)  WHERE FECHA_HORA_BOLETO BETWEEN _FECHA_INICIAL_CORTE AND

_FECHA_FINAL_CORTE AND  TRAB_ID= _EMPLEADO_CORTE and BOL.ID_TERMINAL = _TERMINAL AND COR.TIPOSERVICIO= _SERVICIO

AND BOL.ID_FORMA_PAGO = 1  GROUP BY DESCRIPCION)) AS EFECTIVO,  ((SELECT   COALESCE(sum(BOL.TARIFA),0)

as MONTO  from PDV_T_BOLETO AS BOL JOIN PDV_T_CORRIDA AS COR ON (COR.ID_CORRIDA = BOL.ID_CORRIDA AND

 COR.FECHA=BOL.FECHA)  LEFT JOIN SERVICIOS AS SER ON (COR.TIPOSERVICIO= SER.TIPOSERVICIO)

WHERE FECHA_HORA_BOLETO BETWEEN _FECHA_INICIAL_CORTE AND _FECHA_FINAL_CORTE AND  TRAB_ID= _EMPLEADO_CORTE

and BOL.ID_TERMINAL = _TERMINAL AND COR.TIPOSERVICIO= _SERVICIO AND BOL.ID_FORMA_PAGO = 2)) AS IXE

UNION  SELECT ((SELECT U.NOMBRE  FROM PDV_C_USUARIO AS U JOIN PDV_T_CORTE AS C ON (C.ID_EMPLEADO=U.TRAB_ID) 

 WHERE C.ID_CORTE= _ID_CORTE )) AS PROMOTOR,  ((SELECT S.DESCRIPCION  FROM SERVICIOS AS S  WHERE TIPOSERVICIO= _SERVICIO ))

AS SERVICIO, ((SELECT  COALESCE(sum(BOL.TARIFA)*-1,0) as EFECTIVO  from PDV_T_BOLETO AS BOL 

JOIN PDV_T_CORRIDA AS COR ON (COR.ID_CORRIDA = BOL.ID_CORRIDA AND  COR.FECHA=BOL.FECHA)  

join PDV_T_BOLETO_CANCELADO AS CANC ON  (CANC.ID_BOLETO = BOL.ID_BOLETO AND CANC.ID_TERMINAL=BOL.ID_TERMINAL)

  LEFT JOIN SERVICIOS AS SER ON (COR.TIPOSERVICIO= SER.TIPOSERVICIO)  WHERE FECHA_HORA_CANCELADO 

BETWEEN _FECHA_INICIAL_CORTE AND _FECHA_FINAL_CORTE AND CANC.TRAB_ID_CANCELADO= _EMPLEADO_CORTE

and BOL.ID_TERMINAL = _TERMINAL AND CANC.TRAB_ID = BOL.TRAB_ID and COR.TIPOSERVICIO= _SERVICIO AND

BOL.ID_FORMA_PAGO = 1)) AS EFECTIVO,  ((SELECT  COALESCE(sum(BOL.TARIFA)*-1,0) as EFECTIVO

from PDV_T_BOLETO AS BOL JOIN PDV_T_CORRIDA AS COR ON (COR.ID_CORRIDA = BOL.ID_CORRIDA AND

 COR.FECHA=BOL.FECHA)  join PDV_T_BOLETO_CANCELADO AS CANC ON  (CANC.ID_BOLETO = BOL.ID_BOLETO 

AND CANC.ID_TERMINAL=BOL.ID_TERMINAL)  LEFT JOIN SERVICIOS AS SER ON (COR.TIPOSERVICIO= SER.TIPOSERVICIO)  

WHERE FECHA_HORA_CANCELADO BETWEEN _FECHA_INICIAL_CORTE AND _FECHA_FINAL_CORTE AND

CANC.TRAB_ID_CANCELADO= _EMPLEADO_CORTE and BOL.ID_TERMINAL = _TERMINAL AND CANC.TRAB_ID = BOL.TRAB_ID and

COR.TIPOSERVICIO= _SERVICIO AND BOL.ID_FORMA_PAGO = 2)) AS IXE;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_DETALLE_COMPLETO_RUTA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_DETALLE_COMPLETO_RUTA`(
IN _ID_RUTA INTEGER
)
BEGIN
 DECLARE RESULTADO VARCHAR(400);
 DECLARE TEMP VARCHAR(400);
 DECLARE ORIGEN VARCHAR(10);
 DECLARE DESTINO VARCHAR(10);
 DECLARE done INT DEFAULT 0;
 DECLARE FIN INT DEFAULT 0;


 DECLARE CUR_TODO CURSOR FOR SELECT (SELECT C.ID_TERMINAL FROM T_C_TRAMO T INNER JOIN T_C_TERMINAL C ON T.ORIGEN = C.ID_TERMINAL WHERE T.ID_TRAMO = R.ID_TRAMO) AS ORIGEN,
                              (SELECT C.ID_TERMINAL FROM T_C_TRAMO T INNER JOIN T_C_TERMINAL C ON T.DESTINO = C.ID_TERMINAL WHERE T.ID_TRAMO = R.ID_TRAMO) AS DESTINO
                              FROM T_C_RUTA_D R WHERE ID_RUTA = _ID_RUTA
                              ORDER BY R.ORDEN;

 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
 OPEN CUR_TODO;

 REPEAT
   FETCH CUR_TODO INTO ORIGEN, DESTINO;
   SET RESULTADO = TEMP;
   IF NOT done THEN
     IF NOT FIN THEN
       SET RESULTADO = ORIGEN;
       SET FIN = 1;
     END IF;
     IF FIN THEN
       SELECT CONCAT(RESULTADO,'-',DESTINO) INTO TEMP;
     END IF;
   END IF;
 UNTIL done END REPEAT;
 CLOSE  CUR_TODO;
 SELECT RESULTADO;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_DETALLE_OCUPANTES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_DETALLE_OCUPANTES`(IN _ID_TERMINAL VARCHAR(10), IN _ID_CORRIDA INTEGER)
BEGIN
SELECT ID_OCUPANTE, MAXIMO FROM PDV_C_ITINERARIO_OCUPANTE
WHERE ID_TERMINAL = _ID_TERMINAL
AND ID_CORRIDA = _ID_CORRIDA
ORDER BY ID_OCUPANTE;


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_DETALLE_RUTA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_DETALLE_RUTA`(IN _ID_RUTA INTEGER)
BEGIN
 SELECT 
 (SELECT C.DESCRIPCION FROM T_C_TRAMO T INNER JOIN T_C_TERMINAL C ON T.ORIGEN = C.ID_TERMINAL WHERE T.ID_TRAMO = R.ID_TRAMO AND AUTO = 'A') AS ORIGEN,
 (SELECT C.DESCRIPCION FROM T_C_TRAMO T INNER JOIN T_C_TERMINAL C ON T.DESTINO = C.ID_TERMINAL WHERE T.ID_TRAMO = R.ID_TRAMO AND AUTO = 'A') AS DESTINO
 FROM T_C_RUTA_D R WHERE ID_RUTA = _ID_RUTA
 ORDER BY R.ORDEN;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_GENERA_TRAMOS_CON_SERVICIOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_GENERA_TRAMOS_CON_SERVICIOS`()
BEGIN
  
  

DECLARE _TRAMO INTEGER; 
DECLARE done INT DEFAULT 0;

DECLARE SERVICIOS CURSOR FOR
        SELECT TIPOSERVICIO
        FROM SERVICIOS
        WHERE TIPOSERVICIOS <> 0; 

DECLARE TRAMOS CURSOR FOR
   SELECT  ID_TRAMO
   FROM T_C_TRAMO;


DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

        
   OPEN TRAMOS; 
   REPEAT

      FETCH  TRAMOS INTO _TRAMO;



   UNTIL done END REPEAT;

   CLOSE TRAMOS;
  
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_GENERAR_CORRIDAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_GENERAR_CORRIDAS`(
IN _ID_TERMINAL VARCHAR(5),
IN _FECHA_INICIO DATETIME,
IN _FECHA_FIN DATETIME,
IN _ID_CORRIDA VARCHAR(10),
IN _TIPOSERVICIO INTEGER
)
BEGIN
 DECLARE CORRIDA VARCHAR(10); 
 DECLARE done INT DEFAULT 0;


  
 DECLARE CUR_TODOS CURSOR FOR SELECT ID_CORRIDA
                              FROM  PDV_C_ITINERARIO_D
                              WHERE ID_TERMINAL = _ID_TERMINAL;

 
 DECLARE CUR_SERVICIO CURSOR FOR SELECT ID_CORRIDA FROM PDV_C_ITINERARIO
                                 WHERE TIPOSERVICIO = _TIPOSERVICIO AND
                                 ID_CORRIDA IN(SELECT ID_CORRIDA
                                 FROM  PDV_C_ITINERARIO_D
                                 WHERE ID_TERMINAL = _ID_TERMINAL);


 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;



 
 IF (_ID_CORRIDA = '') AND (_TIPOSERVICIO) = 0 THEN
   OPEN CUR_TODOS;
   REPEAT
     FETCH CUR_TODOS INTO CORRIDA;
     IF NOT done THEN
       CALL PDV_GENERAR_CORRIDAS_M(_ID_TERMINAL, CORRIDA, _FECHA_INICIO, _FECHA_FIN);
     END IF;
   UNTIL done END REPEAT;
   CLOSE  CUR_TODOS;
 END IF;


 
 IF _ID_CORRIDA <> '' THEN
   CALL PDV_GENERAR_CORRIDAS_M(_ID_TERMINAL, _ID_CORRIDA, _FECHA_INICIO, _FECHA_FIN);
 END IF;


 
 IF _TIPOSERVICIO > 0 THEN
   OPEN CUR_SERVICIO;
   REPEAT
     FETCH CUR_SERVICIO INTO CORRIDA;
     IF NOT done THEN
       CALL PDV_GENERAR_CORRIDAS_M(_ID_TERMINAL, CORRIDA, _FECHA_INICIO, _FECHA_FIN);
     END IF;
   UNTIL done END REPEAT;
   CLOSE  CUR_SERVICIO;
 END IF;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_GENERAR_CORRIDAS_M`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_GENERAR_CORRIDAS_M`(
IN _ID_TERMINAL VARCHAR(5),
IN _ID_CORRIDA VARCHAR(10),
IN _FECHA_INICIO DATE,
IN _FECHA_FIN DATE
)
BEGIN
 DECLARE FECHA_ACTUAL DATE;
 DECLARE HORA_CORRIDA,
         HORA_DETALLE TIME;
 DECLARE ID_OCUPANTE_OCUPANTE,
         MAXIMO_OCUPANTE,
         CUPO_DETALLE,
         PIE_DETALLE,
         DIA_ACTUAL,
         ID_TIPO_AUTOBUS_CORRIDA,
         TIPOSERVICIO_CORRIDA,
         ID_RUTA_CORRIDA INTEGER;
 DECLARE HOY VARCHAR(1);
 DECLARE FIN INT DEFAULT 0;

 DECLARE CUR_OCUPANTES CURSOR FOR SELECT ID_OCUPANTE, MAXIMO FROM PDV_C_ITINERARIO_OCUPANTE
                                  WHERE ID_CORRIDA = _ID_CORRIDA AND
                                  ID_TERMINAL = _ID_TERMINAL;

 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET FIN = 1;

 SET FECHA_ACTUAL = _FECHA_INICIO;
 WHILE FECHA_ACTUAL <= _FECHA_FIN DO
   SELECT HORA, ID_TIPO_AUTOBUS, TIPOSERVICIO, ID_RUTA
   INTO HORA_CORRIDA, ID_TIPO_AUTOBUS_CORRIDA, TIPOSERVICIO_CORRIDA, ID_RUTA_CORRIDA
   FROM PDV_C_ITINERARIO WHERE ID_CORRIDA = _ID_CORRIDA;


   SELECT DATE_FORMAT(FECHA_ACTUAL, '%w') INTO DIA_ACTUAL; 
   CASE DIA_ACTUAL
     WHEN 0 THEN SELECT DOMINGO INTO HOY FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;
     WHEN 1 THEN SELECT LUNES INTO HOY FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;
     WHEN 2 THEN SELECT MARTES INTO HOY FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;
     WHEN 3 THEN SELECT MIERCOLES INTO HOY FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;
     WHEN 4 THEN SELECT JUEVES INTO HOY FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;
     WHEN 5 THEN SELECT VIERNES INTO HOY FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;
     WHEN 6 THEN SELECT SABADO INTO HOY FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;
   END CASE;

   IF HOY = 'T' THEN
     
     INSERT INTO PDV_T_CORRIDA(ID_CORRIDA, FECHA, HORA, ID_TIPO_AUTOBUS, TIPOSERVICIO, ID_RUTA, NO_BUS, TIPO_CORRIDA)
     VALUES(_ID_CORRIDA, FECHA_ACTUAL, HORA_CORRIDA, ID_TIPO_AUTOBUS_CORRIDA, TIPOSERVICIO_CORRIDA, ID_RUTA_CORRIDA, NULL, 'N');


     
     SELECT HORA, CUPO, PIE
     INTO HORA_DETALLE, CUPO_DETALLE, PIE_DETALLE
     FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA AND ID_TERMINAL = _ID_TERMINAL;

     
     INSERT INTO PDV_T_CORRIDA_D(ID_CORRIDA, FECHA, ID_TERMINAL, HORA, CUPO, PIE, ESTATUS, ID_RUTA, TRAB_ID)
     VALUES(_ID_CORRIDA, FECHA_ACTUAL, _ID_TERMINAL, HORA_DETALLE, CUPO_DETALLE, PIE_DETALLE, 'A', ID_RUTA_CORRIDA, NULL);


     

     SET FIN = 0; 
     OPEN CUR_OCUPANTES;
     REPEAT
       FETCH CUR_OCUPANTES INTO ID_OCUPANTE_OCUPANTE, MAXIMO_OCUPANTE;
       IF NOT FIN THEN
         INSERT INTO PDV_T_CORRIDA_OCUPANTE(ID_OCUPANTE, MAXIMO, ID_CORRIDA, FECHA, ID_TERMINAL)
         VALUES(ID_OCUPANTE_OCUPANTE, MAXIMO_OCUPANTE, _ID_CORRIDA, FECHA_ACTUAL, _ID_TERMINAL);
       END IF;
     UNTIL FIN END REPEAT;
     CLOSE  CUR_OCUPANTES;



   END IF;




   SET FECHA_ACTUAL = ADDDATE(FECHA_ACTUAL,1);
 END WHILE;



END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_GENERAR_UN_DIA_MAS_TERMINAL`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_GENERAR_UN_DIA_MAS_TERMINAL`()
BEGIN
 DECLARE FECHA_A_GENERAR,
         MAXIMA_FECHA DATETIME;
 DECLARE ID_TERMINAL_LOCAL VARCHAR(5);

 SELECT MAX(FECHA) INTO MAXIMA_FECHA FROM PDV_T_CORRIDA WHERE TIPO_CORRIDA = 'N';
 SET FECHA_A_GENERAR = ADDDATE(MAXIMA_FECHA,1);

 
 
 SELECT ID_TERMINAL INTO ID_TERMINAL_LOCAL FROM PDV_T_CORRIDA_D GROUP BY ID_TERMINAL
 ORDER BY COUNT(ID_TERMINAL) DESC LIMIT 1;

 CALL PDV_GENERAR_CORRIDAS(ID_TERMINAL_LOCAL, FECHA_A_GENERAR, FECHA_A_GENERAR,'',0);


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_GUARDAR_ITINERARIO_D`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_GUARDAR_ITINERARIO_D`(
IN _ID_TERMINAL VARCHAR(10),
IN _ID_CORRIDA VARCHAR(10),
IN _HORA TIME,
IN _CUPO INTEGER,
IN _PIE INTEGER)
BEGIN

INSERT INTO PDV_C_ITINERARIO_D(ID_TERMINAL, ID_CORRIDA, HORA, CUPO, PIE)
VALUES(_ID_TERMINAL, _ID_CORRIDA, _HORA, _CUPO, _PIE);


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_GUARDAR_ITINERARIO_OCUPANTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_GUARDAR_ITINERARIO_OCUPANTE`(
IN _ID_TERMINAL VARCHAR(10),
IN _ID_CORRIDA VARCHAR(10),
IN _ID_OCUPANTE INTEGER,
IN _MAXIMO INTEGER)
BEGIN
 INSERT INTO PDV_C_ITINERARIO_OCUPANTE(ID_TERMINAL, ID_CORRIDA, ID_OCUPANTE, MAXIMO)
   VALUES(_ID_TERMINAL, _ID_CORRIDA, _ID_OCUPANTE, _MAXIMO);

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_HAY_VENTA_PARA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_HAY_VENTA_PARA`(
IN _FECHA_INICIO DATETIME,
IN _FECHA_FIN DATETIME,
IN _ID_CORRIDA VARCHAR(10),
IN _TIPOSERVICIO INTEGER
)
BEGIN


 IF (_ID_CORRIDA = '') AND (_TIPOSERVICIO) = 0 THEN
   SELECT COUNT(*) AS TOTAL FROM PDV_T_ASIENTO WHERE CAST(FECHA_HORA_CORRIDA AS DATE) BETWEEN _FECHA_INICIO AND _FECHA_FIN;
 END IF;

 
 IF _ID_CORRIDA <> '' THEN
   SELECT COUNT(*) AS TOTAL FROM PDV_T_ASIENTO WHERE CAST(FECHA_HORA_CORRIDA AS DATE) BETWEEN _FECHA_INICIO AND _FECHA_FIN
          AND ID_CORRIDA = _ID_CORRIDA;
 END IF;


 
 IF _TIPOSERVICIO > 0 THEN
   SELECT COUNT(*) AS TOTAL FROM PDV_T_ASIENTO WHERE CAST(FECHA_HORA_CORRIDA AS DATE) BETWEEN _FECHA_INICIO AND _FECHA_FIN
          AND ID_CORRIDA  IN (SELECT ID_CORRIDA FROM PDV_T_CORRIDA WHERE TIPOSERVICIO = _TIPOSERVICIO GROUP BY ID_CORRIDA);
 END IF;


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_IMPORTE_INGRESOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_IMPORTE_INGRESOS`()
BEGIN
  SELECT      COALESCE(SUM(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN
                                          ( SELECT ID_FORMA_PAGO
                                            FROM PDV_C_FORMA_PAGO
                                            WHERE SUMA_EFECTIVO_COBRO  =1 )
                                          AND ID_TERMINAL = _TERMINAL;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_INSERTA_TRAMOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_INSERTA_TRAMOS`(IN _SQL text)
BEGIN
  SET @s = _SQL;
  PREPARE INSERTA FROM @s;
  EXECUTE INSERTA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_LIBERA_RESERVADOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_LIBERA_RESERVADOS`()
BEGIN
 DELETE FROM PDV_T_ASIENTO
 WHERE
      STATUS = 'R' AND
      FECHA_HORA_ORIGEN <= DATE_ADD(NOW(), INTERVAL(SELECT VALOR FROM PDV_C_PARAMETRO
                                                    WHERE ID_PARAMETRO = 11) MINUTE);

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_MODIFICAR_ITINERARIO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_MODIFICAR_ITINERARIO`(
IN _HORA TIME,
IN _LUNES CHAR(1),
IN _MARTES CHAR(1),
IN _MIERCOLES CHAR(1),
IN _JUEVES CHAR(1),
IN _VIERNES CHAR(1),
IN _SABADO CHAR(1),
IN _DOMINGO CHAR(1),
IN _ID_TIPO_AUTOBUS INTEGER,
IN _TIPOSERVICIO INTEGER,
IN _ID_RUTA INTEGER,
IN _ID_CORRIDA VARCHAR(10))
BEGIN


UPDATE PDV_C_ITINERARIO SET HORA = _HORA, LUNES = _LUNES, MARTES = _MARTES, MIERCOLES = _MIERCOLES,
JUEVES = _JUEVES, VIERNES = _VIERNES, SABADO = _SABADO, DOMINGO = _DOMINGO, ID_TIPO_AUTOBUS = _ID_TIPO_AUTOBUS,
TIPOSERVICIO = _TIPOSERVICIO, ID_RUTA = _ID_RUTA WHERE ID_CORRIDA = _ID_CORRIDA;


DELETE FROM PDV_C_ITINERARIO_D WHERE ID_CORRIDA = _ID_CORRIDA;


DELETE FROM PDV_C_ITINERARIO_OCUPANTE WHERE ID_CORRIDA = _ID_CORRIDA;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_NUEVO_EXTRA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_NUEVO_EXTRA`(
IN _ID_TERMINAL  VARCHAR(5),
IN _FECHA DATE,
IN _HORA TIME,
IN _ID_TIPO_AUTOBUS INTEGER,
IN _TIPOSERVICIO INTEGER,
IN _ID_RUTA INTEGER)
BEGIN
 DECLARE INICIO_ID_CORRIDA VARCHAR(7);
 SET INICIO_ID_CORRIDA = CONCAT(_ID_TERMINAL, _TIPOSERVICIO);

 
 INSERT INTO PDV_T_CORRIDA(ID_CORRIDA, FECHA, HORA, ID_TIPO_AUTOBUS, TIPOSERVICIO, ID_RUTA, NO_BUS, TIPO_CORRIDA)
 SELECT CONCAT(_ID_TERMINAL, _TIPOSERVICIO, COALESCE(MAX(SUBSTRING(ID_CORRIDA, LENGTH(INICIO_ID_CORRIDA)+1)+0), 0) +1),
 _FECHA, _HORA, _ID_TIPO_AUTOBUS, _TIPOSERVICIO, _ID_RUTA, NULL, 'E'
 FROM PDV_T_CORRIDA WHERE TIPOSERVICIO = _TIPOSERVICIO AND FECHA = _FECHA
 AND SUBSTRING(ID_CORRIDA, 1, LENGTH(INICIO_ID_CORRIDA)) = INICIO_ID_CORRIDA
 AND TIPO_CORRIDA = 'E';


 
 SELECT ID_CORRIDA AS NUEVA_CORRIDA FROM PDV_T_CORRIDA
 WHERE HORA = _HORA AND FECHA = _FECHA AND ID_TIPO_AUTOBUS = _ID_TIPO_AUTOBUS
 AND TIPOSERVICIO = _TIPOSERVICIO AND ID_RUTA = _ID_RUTA AND ID_CORRIDA LIKE CONCAT(INICIO_ID_CORRIDA,'%')
 ORDER BY SUBSTRING(ID_CORRIDA, LENGTH(INICIO_ID_CORRIDA)+1)+0 DESC
 LIMIT 1;


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_NUEVO_ITINERARIO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_NUEVO_ITINERARIO`(
IN _HORA TIME,
IN _LUNES CHAR(1),
IN _MARTES CHAR(1),
IN _MIERCOLES CHAR(1),
IN _JUEVES CHAR(1),
IN _VIERNES CHAR(1),
IN _SABADO CHAR(1),
IN _DOMINGO CHAR(1),
IN _ID_TIPO_AUTOBUS INTEGER,
IN _TIPOSERVICIO INTEGER,
IN _ID_RUTA INTEGER)
BEGIN

INSERT INTO PDV_C_ITINERARIO(ID_CORRIDA, HORA, LUNES, MARTES, MIERCOLES, JUEVES, VIERNES, SABADO, DOMINGO,
ID_TIPO_AUTOBUS, TIPOSERVICIO, ID_RUTA)
SELECT COALESCE(MAX(ID_CORRIDA+0), 0) +1,_HORA, _LUNES, _MARTES, _MIERCOLES, _JUEVES, _VIERNES, _SABADO, _DOMINGO,
_ID_TIPO_AUTOBUS, _TIPOSERVICIO, _ID_RUTA
FROM PDV_C_ITINERARIO;


SELECT MAX(ID_CORRIDA+0) AS NUEVA_CORRIDA FROM PDV_C_ITINERARIO WHERE HORA = _HORA AND LUNES = _LUNES AND
MARTES = _MARTES AND MIERCOLES = _MIERCOLES
AND JUEVES = _JUEVES AND VIERNES = _VIERNES AND SABADO = _SABADO AND DOMINGO = _DOMINGO AND
ID_TIPO_AUTOBUS = _ID_TIPO_AUTOBUS
AND TIPOSERVICIO = _TIPOSERVICIO AND ID_RUTA = _ID_RUTA;



END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_PROCESA_CORTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_PROCESA_CORTE`(IN _FOLIO_CORTE INTEGER, IN _TERMINAL VARCHAR(10), IN  _CAJERO VARCHAR(10))
BEGIN


DECLARE  EMPLEADO  VARCHAR(10); 
DECLARE FECHA1 DATETIME; 
DECLARE FECHA2 DATETIME; 
DECLARE DESCUENTO INTEGER; 
DECLARE _IMPORTE_BOLETOS_EFECTIVO REAL; 
DECLARE _IMPORTE_RECOLECCIONES    REAL; 
DECLARE _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO REAL; 
DECLARE _IMPORTE_FONDO_INICIAL REAL;   
DECLARE _ENTREGA_EFECTIVO REAL; 
DECLARE _ENTREGA_RECOLECCIONES REAL; 
DECLARE _TOTAL_RECOLECCIONES INT; 
DECLARE _TOTAL_BOLETOS_CANCELADOS_EFECTIVO INT; 
DECLARE _TOTAL_IMPORTE_BOLETOS_IXE REAL; 
DECLARE _TOTAL_BOLETOS_IXE INT; 

DECLARE ASIGNA_EMPLEADO CURSOR FOR SELECT ID_EMPLEADO
                                   FROM  PDV_T_CORTE
                                   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE ASIGNA_FECHAS CURSOR FOR SELECT FECHA_INICIO, FECHA_FIN
                                 FROM  PDV_T_CORTE
                                 WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE IMPORTE_BOLETOS_EFECTIVO CURSOR FOR SELECT      COALESCE(SUM(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN
                                          ( SELECT ID_FORMA_PAGO
                                            FROM PDV_C_FORMA_PAGO
                                            WHERE SUMA_EFECTIVO_COBRO  = 1 )
                                          AND ID_TERMINAL = _TERMINAL;


DECLARE IMPORTE_RECOLECCIONES    CURSOR FOR SELECT      COALESCE(SUM(IMPORTE),0)
                                          FROM PDV_T_RECOLECCION
                                          WHERE FECHA_HORA BETWEEN FECHA1 AND FECHA2 AND ID_EMPLEADO = EMPLEADO
                                          AND ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;


DECLARE IMPORTE_BOLETOS_CANCELADOS_EFECTIVO CURSOR FOR SELECT COALESCE(SUM(TARIFA),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          AND B.ID_FORMA_PAGO
                                                                         IN
                                                                           ( SELECT ID_FORMA_PAGO
                                                                             FROM PDV_C_FORMA_PAGO
                                                                             WHERE SUMA_EFECTIVO_COBRO  =1 )
                                                          AND C.TRAB_ID = B.TRAB_ID;




DECLARE TOTAL_BOLETOS_CANCELADOS_EFECTIVO CURSOR FOR SELECT COALESCE(COUNT(*),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO
                                                       AND B.ID_TERMINAL = C.ID_TERMINAL)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          AND B.ID_FORMA_PAGO
                                                                         
                                                                         
                                                                         
                                                                         
                                                          AND C.TRAB_ID = B.TRAB_ID;


DECLARE IMPORTE_FONDO_INICIAL CURSOR FOR SELECT COALESCE(FONDO_INICIAL,0) FROM PDV_T_CORTE
                                         WHERE ID_CORTE= _FOLIO_CORTE
                                         AND ID_TERMINAL = _TERMINAL;


DECLARE TOTAL_RECOLECCIONES CURSOR FOR SELECT  COALESCE(COUNT(*),0)
                                          FROM PDV_T_RECOLECCION
                                          WHERE FECHA_HORA BETWEEN FECHA1 AND FECHA2 AND ID_EMPLEADO = EMPLEADO
                                          AND ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL;

DECLARE IMPORTE_BOLETOS_IXE CURSOR FOR SELECT (SELECT      COALESCE(SUM(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN ( 2 )
                                          AND ID_TERMINAL = _TERMINAL)
                                          -
                                          (SELECT COALESCE(SUM(B.TARIFA),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO
                                                       AND B.ID_TERMINAL = C.ID_TERMINAL)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          AND B.ID_FORMA_PAGO  IN (2)
                                                          AND C.TRAB_ID = B.TRAB_ID);





DECLARE TOTAL_BOLETOS_IXE CURSOR FOR SELECT (SELECT      COALESCE(COUNT(TARIFA),0)
                                          FROM PDV_T_BOLETO
                                          WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
                                          AND ID_FORMA_PAGO IN ( 2 )
                                          AND ID_TERMINAL = _TERMINAL)
                                          -
                                          (SELECT COALESCE(COUNT(B.TARIFA),0)
                                                       FROM PDV_T_BOLETO AS B JOIN PDV_T_BOLETO_CANCELADO AS C ON (B.ID_BOLETO = C.ID_BOLETO
                                                       AND B.ID_TERMINAL = C.ID_TERMINAL)
                                                       WHERE  C.ID_TERMINAL = _TERMINAL AND C.TRAB_ID_CANCELADO = EMPLEADO
                                                          AND FECHA_HORA_CANCELADO BETWEEN FECHA1 AND FECHA2
                                                          AND B.ID_FORMA_PAGO  IN (2)
                                                          AND C.TRAB_ID = B.TRAB_ID);


UPDATE PDV_T_CORTE
SET FECHA_FIN = NOW()
WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS = 'P'; 

   OPEN ASIGNA_EMPLEADO; 
   FETCH ASIGNA_EMPLEADO INTO EMPLEADO; 

   OPEN ASIGNA_FECHAS; 
   FETCH ASIGNA_FECHAS INTO FECHA1, FECHA2; 

   
   
   
   
   

   
   
   OPEN IMPORTE_BOLETOS_EFECTIVO;
   FETCH IMPORTE_BOLETOS_EFECTIVO INTO _IMPORTE_BOLETOS_EFECTIVO;
   
   OPEN IMPORTE_RECOLECCIONES;
   FETCH IMPORTE_RECOLECCIONES INTO _IMPORTE_RECOLECCIONES;
   
   OPEN IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   FETCH IMPORTE_BOLETOS_CANCELADOS_EFECTIVO INTO _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   
   OPEN TOTAL_BOLETOS_CANCELADOS_EFECTIVO; 
   FETCH  TOTAL_BOLETOS_CANCELADOS_EFECTIVO INTO _TOTAL_BOLETOS_CANCELADOS_EFECTIVO; 
   
   OPEN  IMPORTE_FONDO_INICIAL;
   FETCH IMPORTE_FONDO_INICIAL INTO _IMPORTE_FONDO_INICIAL;
   
   OPEN TOTAL_RECOLECCIONES;
   FETCH TOTAL_RECOLECCIONES INTO _TOTAL_RECOLECCIONES;


   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'EFECTIVO';

   IF _IMPORTE_BOLETOS_EFECTIVO <= _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO THEN

      SET _ENTREGA_EFECTIVO =   _IMPORTE_FONDO_INICIAL + _IMPORTE_BOLETOS_EFECTIVO - _IMPORTE_RECOLECCIONES - _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;


   ELSEIF _IMPORTE_BOLETOS_EFECTIVO > _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO THEN

      SET _ENTREGA_EFECTIVO =  _IMPORTE_FONDO_INICIAL  + _IMPORTE_BOLETOS_EFECTIVO - _IMPORTE_RECOLECCIONES -  _IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;

   END IF;

   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'EFECTIVO';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _ENTREGA_EFECTIVO, 'EFECTIVO', NULL,        NULL);



   
   UPDATE  PDV_T_BOLETO
   SET ESTATUS_PROCESADO = ESTATUS
   WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = EMPLEADO
   AND ID_TERMINAL = _TERMINAL;

  

   CALL PDV_REGRESA_CANCELADOS(FECHA1, FECHA2, EMPLEADO, _TERMINAL);

   
   OPEN IMPORTE_BOLETOS_IXE;
   FETCH IMPORTE_BOLETOS_IXE INTO _TOTAL_IMPORTE_BOLETOS_IXE;

      
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'IMPORTE_IXES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _TOTAL_IMPORTE_BOLETOS_IXE, 'IMPORTE_IXES', NULL,        NULL);


   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'CANCELADOS';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO, ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _TOTAL_BOLETOS_CANCELADOS_EFECTIVO,  'CANCELADOS', NULL,   NULL);



   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'RECOLECCIONES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO, ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES( _TERMINAL, _FOLIO_CORTE, 0, _IMPORTE_RECOLECCIONES , 'RECOLECCIONES', NULL,NULL);

   
   DELETE FROM PDV_CORTE_D
   WHERE ID_TERMINAL = _TERMINAL AND ID_CORTE = _FOLIO_CORTE AND  TIPO = 'TOTAL_RECOLECCIONES';

   INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA,       TIPO,       ID_OCUPANTE, ID_FORMA_PAGO)
   VALUES(                  _TERMINAL, _FOLIO_CORTE, 0, _TOTAL_RECOLECCIONES, 'TOTAL_RECOLECCIONES', NULL,        NULL);


   
   
   CALL PDV_PROCESA_CORTE_FORMAS_PAGO(_FOLIO_CORTE , _TERMINAL,FECHA1,FECHA2,EMPLEADO);



   
   
   CALL PDV_PROCESA_CORTE_DESCUENTOS(_FOLIO_CORTE , _TERMINAL,FECHA1,FECHA2,EMPLEADO);


    
   UPDATE PDV_T_CORTE
   SET ESTATUS= 'F'
   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS = 'P'; 

   UPDATE PDV_T_CORTE
   SET ID_CAJERO = _CAJERO
   WHERE ID_CORTE = _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND  ESTATUS = 'F';

   OPEN TOTAL_BOLETOS_IXE;
   FETCH TOTAL_BOLETOS_IXE INTO _TOTAL_BOLETOS_IXE;


   UPDATE PDV_CORTE_D
   SET SISTEMA= _TOTAL_BOLETOS_IXE
   WHERE ID_CORTE= _FOLIO_CORTE AND ID_TERMINAL= _TERMINAL AND ID_FORMA_PAGO= 2;

   
   CLOSE  ASIGNA_EMPLEADO;
   CLOSE  ASIGNA_FECHAS;
   CLOSE IMPORTE_BOLETOS_EFECTIVO;
   CLOSE IMPORTE_RECOLECCIONES;
   CLOSE IMPORTE_BOLETOS_CANCELADOS_EFECTIVO;
   CLOSE IMPORTE_FONDO_INICIAL;
   CLOSE TOTAL_RECOLECCIONES;
   CLOSE TOTAL_BOLETOS_CANCELADOS_EFECTIVO;
   CLOSE IMPORTE_BOLETOS_IXE;
   CLOSE TOTAL_BOLETOS_IXE;



END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_PROCESA_CORTE_DESCUENTOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_PROCESA_CORTE_DESCUENTOS`(IN _FOLIO_CORTE INT, IN _TERMINAL VARCHAR (10) ,
                                                                     IN _FECHA1 DATETIME,  IN _FECHA2 DATETIME,
                                                                     IN _EMPLEADO VARCHAR(10))
BEGIN
DECLARE ID_DESCUENTO INTEGER; 
DECLARE done INT DEFAULT 0;



DECLARE DESCUENTOS CURSOR FOR SELECT ID_OCUPANTE
                              FROM PDV_C_OCUPANTE
                              WHERE ID_OCUPANTE <> 1 AND FECHA_BAJA IS NULL
                              ORDER BY ID_OCUPANTE;



DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;



        
   OPEN DESCUENTOS; 
   REPEAT

      FETCH  DESCUENTOS INTO ID_DESCUENTO;

      DELETE   FROM   PDV_CORTE_D
      WHERE ID_TERMINAL= _TERMINAL AND  ID_CORTE = _FOLIO_CORTE AND TIPO = 'DESCUENTO' AND ID_OCUPANTE = ID_DESCUENTO;

      INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO, ID_OCUPANTE)
      SELECT _TERMINAL, _FOLIO_CORTE, 0, COALESCE(COUNT(*),0), 'DESCUENTO',ID_DESCUENTO
      FROM PDV_T_BOLETO
      WHERE FECHA_HORA_BOLETO BETWEEN _FECHA1 AND _FECHA2 AND TRAB_ID = _EMPLEADO AND ID_OCUPANTE = ID_DESCUENTO
      AND ESTATUS_PROCESADO = 'V' AND ID_TERMINAL= _TERMINAL;

   UNTIL done END REPEAT;

   CLOSE DESCUENTOS;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_PROCESA_CORTE_FORMAS_PAGO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_PROCESA_CORTE_FORMAS_PAGO`(IN _FOLIO_CORTE INT, IN _TERMINAL VARCHAR (10) ,
                                                                     IN _FECHA1 DATETIME,  IN _FECHA2 DATETIME,
                                                                     IN _EMPLEADO VARCHAR(10))
BEGIN
DECLARE FORMA_PAGO INTEGER; 
DECLARE done INT DEFAULT 0;


DECLARE FORMAS_DE_PAGO CURSOR FOR
   SELECT  ID_FORMA_PAGO
   FROM PDV_C_FORMA_PAGO
   WHERE ID_FORMA_PAGO <> 1  AND FECHA_BAJA IS NULL;

DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;



        
   OPEN FORMAS_DE_PAGO; 
   REPEAT

      FETCH  FORMAS_DE_PAGO INTO FORMA_PAGO;

      DELETE FROM  PDV_CORTE_D
      WHERE ID_TERMINAL = _TERMINAL AND TIPO = 'FORMAS_DE_PAGO' AND ID_FORMA_PAGO = FORMA_PAGO  AND ID_CORTE = _FOLIO_CORTE;

      INSERT INTO PDV_CORTE_D(ID_TERMINAL, ID_CORTE, ENTREGA, SISTEMA, TIPO,  ID_FORMA_PAGO)
      SELECT _TERMINAL, _FOLIO_CORTE, 0, COALESCE(COUNT(*),0), 'FORMAS_DE_PAGO', FORMA_PAGO
      FROM PDV_T_BOLETO
      WHERE FECHA_HORA_BOLETO BETWEEN _FECHA1 AND _FECHA2 AND TRAB_ID = _EMPLEADO AND ID_FORMA_PAGO = FORMA_PAGO
      AND ESTATUS_PROCESADO = 'V' AND ID_TERMINAL = _TERMINAL;

   UNTIL done END REPEAT;

   CLOSE FORMAS_DE_PAGO;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_RECOLECTA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_RECOLECTA`(IN  _TERMINAL VARCHAR(10),
                                                     IN _TAQUILLA INT,
                                                     IN _EMPLEADO VARCHAR(10),
                                                     IN  _EMPLEADO_REALIZA VARCHAR(10),
                                                     IN _IMPORTE DECIMAL(9,2))
BEGIN
DECLARE _ESTATUS INT;
DECLARE _FECHA_HORA  DATETIME;
DECLARE _ID_CORTE INT;
DECLARE _TOTAL_CORTES INT;
DECLARE FECHA1, FECHA2 DATETIME;
DECLARE _TOTAL_EFECTIVO REAL;




DECLARE ASIGNA_FECHAS CURSOR FOR SELECT FECHA_INICIO, NOW()
                                 FROM  PDV_T_CORTE
                                 WHERE ID_CORTE = _ID_CORTE AND ID_TERMINAL= _TERMINAL;

DECLARE CUENTA_CORTES CURSOR FOR SELECT COUNT(*) AS TOTAL
                               FROM  PDV_T_CORTE
                               WHERE ID_TERMINAL= _TERMINAL AND ID_EMPLEADO= _EMPLEADO
                               AND ESTATUS <> 'F' AND FECHA_FIN IS NULL;

DECLARE BUSCA_FOLIO CURSOR FOR SELECT ID_CORTE
                               FROM  PDV_T_CORTE
                               WHERE ID_TERMINAL= _TERMINAL AND ID_EMPLEADO= _EMPLEADO
                               AND ESTATUS <> 'F' AND FECHA_FIN IS NULL;

DECLARE TOTAL_EFECTIVO CURSOR FOR SELECT (SELECT COALESCE(SUM(TARIFA),0) AS EFECTIVO
                                  FROM PDV_T_BOLETO
                                  WHERE FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID = _EMPLEADO AND ESTATUS='V') -
                                  (
                                  SELECT COALESCE(SUM(IMPORTE),0) AS EFECTIVO
                                  FROM PDV_T_RECOLECCION
                                  WHERE FECHA_HORA BETWEEN FECHA1 AND FECHA2 AND ID_EMPLEADO = _EMPLEADO AND ID_CORTE = _ID_CORTE
                                  AND ID_TERMINAL= _TERMINAL
                                  )  AS EFECTIVO;

SET _ESTATUS=1;
SET _FECHA_HORA = NOW();

OPEN BUSCA_FOLIO;
FETCH BUSCA_FOLIO INTO _ID_CORTE;

OPEN CUENTA_CORTES;
FETCH CUENTA_CORTES  INTO _TOTAL_CORTES;

IF _TOTAL_CORTES > 1 THEN
    SET _ESTATUS = 2; 
   
   
END IF;

OPEN ASIGNA_FECHAS; 
FETCH ASIGNA_FECHAS INTO FECHA1, FECHA2; 

OPEN  TOTAL_EFECTIVO ;
FETCH TOTAL_EFECTIVO INTO   _TOTAL_EFECTIVO;

IF _TOTAL_EFECTIVO < _IMPORTE THEN


    SET _ESTATUS = 1; 
                     
    
END IF;

IF _ESTATUS = 1 THEN
    INSERT INTO PDV_T_RECOLECCION(ID_TERMINAL, ID_TAQUILLA, ID_CORTE,   FECHA_HORA, ID_EMPLEADO, ID_EMPLEADO_REALIZA, IMPORTE)
    VALUES(                       _TERMINAL,   _TAQUILLA,    _ID_CORTE, _FECHA_HORA,      _EMPLEADO,  _EMPLEADO_REALIZA, _IMPORTE);
END IF;

                        

SELECT FECHA_HORA, _ESTATUS
FROM PDV_T_RECOLECCION LIMIT 1;



CLOSE ASIGNA_FECHAS;
CLOSE CUENTA_CORTES;
CLOSE TOTAL_EFECTIVO;
CLOSE BUSCA_FOLIO;



END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_REGRESA_CANCELADOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_REGRESA_CANCELADOS`(IN FECHA1 DATETIME,IN FECHA2 DATETIME, IN EMPLEADO VARCHAR(15), IN _TERMINAL VARCHAR(10))
BEGIN
DECLARE done INT DEFAULT 0;
DECLARE _ID_BOLETO INT;
DECLARE _ID_TERMINAL VARCHAR(10);
DECLARE _TRAB_ID VARCHAR (15);
DECLARE _ESTATUS VARCHAR(1);
DECLARE _FECHA_HORA_BOLETO DATETIME;

DECLARE   REGRESAR CURSOR    FOR SELECT ID_BOLETO, ID_TERMINAL, TRAB_ID, ESTATUS, FECHA_HORA_BOLETO
                             FROM PDV_T_BOLETO
                             WHERE ID_TERMINAL= _TERMINAL AND FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID= EMPLEADO AND ESTATUS_PROCESADO='C'
                             AND ID_BOLETO IN (    SELECT ID_BOLETO
                                 FROM PDV_T_BOLETO_CANCELADO
                                WHERE TRAB_ID= EMPLEADO AND TRAB_ID_CANCELADO <> TRAB_ID AND ID_TERMINAL=_TERMINAL AND ID_BOLETO IN (
                                      SELECT ID_BOLETO
                                      FROM PDV_T_BOLETO
                                      WHERE ID_TERMINAL= _TERMINAL AND FECHA_HORA_BOLETO BETWEEN FECHA1 AND FECHA2 AND TRAB_ID= EMPLEADO  AND ESTATUS='C'
                                      AND ESTATUS_PROCESADO='C'  )
                                );
DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

 OPEN REGRESAR; 
   REPEAT

      FETCH  REGRESAR INTO _ID_BOLETO, _ID_TERMINAL, _TRAB_ID,_ESTATUS, _FECHA_HORA_BOLETO;

      UPDATE    PDV_T_BOLETO
      SET ESTATUS_PROCESADO='V'
      WHERE ID_TERMINAL= _ID_TERMINAL
      AND FECHA_HORA_BOLETO = _FECHA_HORA_BOLETO
      AND TRAB_ID= _TRAB_ID
      AND ESTATUS_PROCESADO='C'
      AND ID_BOLETO = _ID_BOLETO;

   UNTIL done END REPEAT;

   CLOSE REGRESAR;




END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ADD_CANCELADO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ADD_CANCELADO`(IN IN_BOLETO INTEGER, IN IN_TERMINAL VARCHAR(5),
                                         IN IN_TRAB_CANCELA VARCHAR(10), IN IN_TAQUILLA INTEGER,
                                         IN IN_TRABID VARCHAR(10))
BEGIN
    INSERT INTO PDV_T_BOLETO_CANCELADO(ID_BOLETO, ID_TERMINAL,TRAB_ID_CANCELADO, FECHA_HORA_CANCELADO,
                                       ID_TAQUILLA, TRAB_ID)
    VALUES(IN_BOLETO,IN_TERMINAL,IN_TRAB_CANCELA,NOW(),IN_TAQUILLA,IN_TRABID);

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ADD_COORDENADAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ADD_COORDENADAS`(IN ID_BUS INTEGER, IN X INTEGER, IN Y INTEGER, IN NUMERO  INTEGER)
BEGIN
    INSERT INTO PDV_C_TIPO_AUTOBUS_D(ID_TIPO_AUTOBUS, ASIENTO, X, Y)
    VALUES(ID_BUS, NUMERO, X, Y);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_AGRUPA_CORRIDAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_AGRUPA_CORRIDAS`(IN ORIGEN_CORRIDA VARCHAR(7), IN ORIGEN_FECHA DATE,
                                           IN DESTINO_CORRIDA VARCHAR(7), IN DESTINO_FECHA DATE)
BEGIN
    DECLARE CORRIDA VARCHAR(10);
    DECLARE FECHA_HORA DATETIME;
    DECLARE ASIENTO,ASIENTO_ORIGEN, ASIENTO_DESTINO  INT DEFAULT 0;
    DECLARE NOMBRE   VARCHAR(40);
    DECLARE TERMINAL VARCHAR(5);
    DECLARE TRABID   VARCHAR(7);
    DECLARE ORI_CORRIDA, DES_CORRIDA VARCHAR(5);
    DECLARE ESTATUS VARCHAR(1);
    DECLARE HORA_ORIGEN DATETIME;
    DECLARE done INT DEFAULT 0;
    DECLARE OK, OK_ARREGLO, R_ASIENTO, LUGARES INT DEFAULT 0;
    DECLARE INDICE INT DEFAULT 1;
    DECLARE cur CURSOR FOR SELECT ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO,
                           TERMINAL_RESERVACION, TRAB_ID, ORIGEN, DESTINO, STATUS, FECHA_HORA_ORIGEN
                    FROM PDV_T_ASIENTO
                    WHERE ID_CORRIDA = ORIGEN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = ORIGEN_FECHA;
    DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;


    SELECT A.ASIENTOS INTO LUGARES
    FROM PDV_C_TIPO_AUTOBUS A INNER JOIN PDV_T_CORRIDA C ON A.ID_TIPO_AUTOBUS = C.ID_TIPO_AUTOBUS
    WHERE ID_CORRIDA = DESTINO_CORRIDA AND C.FECHA  = DESTINO_FECHA;

    UPDATE PDV_T_CORRIDA_D SET TRAB_ID = 'root',  ESTATUS = 'C'
    WHERE ID_CORRIDA = ORIGEN_CORRIDA AND FECHA = ORIGEN_FECHA;

    UPDATE PDV_T_CORRIDA_D SET TRAB_ID = 'root'
    WHERE ID_CORRIDA = DESTINO_CORRIDA AND FECHA = DESTINO_FECHA;


    OPEN cur;
    REPEAT
      FETCH cur INTO CORRIDA, FECHA_HORA, ASIENTO, NOMBRE, TERMINAL, TRABID, ORI_CORRIDA,
                     DES_CORRIDA, ESTATUS, HORA_ORIGEN;
      IF NOT done THEN
          CALL PDV_STORE_AGRUPA_CORRIDAS_UNICA_NEW(DESTINO_CORRIDA, DESTINO_FECHA, ASIENTO, OK);
          IF OK = 0 THEN
               INSERT INTO PDV_T_ASIENTO(ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO,
                                         TERMINAL_RESERVACION, TRAB_ID, ORIGEN, DESTINO, STATUS, FECHA_HORA_ORIGEN)
               VALUES(DESTINO_CORRIDA, DESTINO_FECHA, ASIENTO, NOMBRE, TERMINAL, TRABID, ORI_CORRIDA,
                      DES_CORRIDA, ESTATUS, HORA_ORIGEN);
               DELETE FROM PDV_T_ASIENTO
               WHERE ID_CORRIDA = ORIGEN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = ORIGEN_FECHA AND
                     NO_ASIENTO = ASIENTO;
          END IF;
          IF OK > 0 THEN
              SET INDICE = 1;
              WHILE INDICE < LUGARES DO

                  CALL PDV_STORE_AGRUPA_CORRIDAS_UNICA_NEW(DESTINO_CORRIDA, DESTINO_FECHA, INDICE, OK_ARREGLO);
                  IF OK_ARREGLO = 0 THEN
                       INSERT INTO PDV_T_ASIENTO(ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO,
                                                 TERMINAL_RESERVACION, TRAB_ID, ORIGEN, DESTINO, STATUS, FECHA_HORA_ORIGEN)
                       VALUES(DESTINO_CORRIDA, DESTINO_FECHA, INDICE, NOMBRE, TERMINAL, TRABID, ORI_CORRIDA,
                              DES_CORRIDA, ESTATUS, HORA_ORIGEN);
                       DELETE FROM PDV_T_ASIENTO
                       WHERE ID_CORRIDA = ORIGEN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = ORIGEN_FECHA AND
                             NO_ASIENTO = ASIENTO;
                       SET INDICE = LUGARES;
                  END IF;
                  IF NOT INDICE = LUGARES THEN
                      SET INDICE = INDICE + 1;
                  END IF;
              END WHILE;
          END IF;
      END IF;
    UNTIL done END REPEAT;
    CLOSE cur;

    UPDATE PDV_T_CORRIDA_D SET ESTATUS = 'C'
    WHERE ID_CORRIDA = ORIGEN_CORRIDA AND FECHA = ORIGEN_FECHA;

    UPDATE PDV_T_CORRIDA_D SET TRAB_ID = NULL
    WHERE ID_CORRIDA = DESTINO_CORRIDA AND FECHA = DESTINO_FECHA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_AGRUPA_CORRIDAS_UNICA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_AGRUPA_CORRIDAS_UNICA`(IN IN_CORRIDA VARCHAR(7), IN FECHA_ASIENTO DATE,
                                              IN IN_ASIENTO INT, IN IN_NOMBRE VARCHAR(80),IN IN_TERMINAL VARCHAR(5),
                                              IN IN_TRABID VARCHAR(7), IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                              IN IN_ESTATUS VARCHAR(1), IN HORA_ORIGEN DATE)
BEGIN
      DECLARE LUGAR INT;
      DECLARE OK INT DEFAULT 0;
      DECLARE done INT DEFAULT 0;
      DECLARE INDICE INT DEFAULT 0;
      DECLARE LUGARES INT DEFAULT 0;
      DECLARE cur CURSOR FOR SELECT NO_ASIENTO
                             FROM PDV_T_ASIENTO
                             WHERE ID_CORRIDA = IN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = CAST(FECHA_ASIENTO AS DATE);
      DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;


      SELECT A.ASIENTOS INTO LUGARES
      FROM PDV_C_TIPO_AUTOBUS A INNER JOIN PDV_T_CORRIDA C ON A.ID_TIPO_AUTOBUS = C.ID_TIPO_AUTOBUS
      WHERE ID_CORRIDA = IN_CORRIDA AND C.FECHA  = CAST(FECHA_ASIENTO AS DATE);

      IF LENGTH(HORA_ORIGEN) = 0 THEN
          SET HORA_ORIGEN = NULL;
      END IF;

      SET LUGARES = LUGARES + 1;
      OPEN cur;
      REPEAT
        FETCH cur INTO LUGAR;
        IF NOT done THEN
            SET INDICE = 1;
            WHILE INDICE < LUGARES DO
                  CALL PDV_STORE_AGRUPA_CORRIDAS_UNICA(DESTINO_CORRIDA, DESTINO_FECHA, INDICE, OK);
                  IF OK = 0 THEN
                       INSERT INTO PDV_T_ASIENTO(ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO,
                                                 TERMINAL_RESERVACION, TRAB_ID, ORIGEN, DESTINO, STATUS, FECHA_HORA_ORIGEN)
                       VALUES(IN_CORRIDA, FECHA_ASIENTO, INDICE, IN_NOMBRE, IN_TERMINAL, IN_TRABID, IN_ORIGEN,
                              IN_DESTINO, IN_ESTATUS, HORA_ORIGEN);
                       SET INDICE = LUGARES;
                  END IF;
                  IF NOT INDICE = LUGARES THEN
                      SET INDICE = INDICE + 1;
                  END IF;
            END WHILE;
        END IF;
      UNTIL done END REPEAT;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_AGRUPA_CORRIDAS_UNICA_NEW`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_AGRUPA_CORRIDAS_UNICA_NEW`(IN ORIGEN_CORRIDA VARCHAR(7), IN ORIGEN_FECHA DATE,
                                                 IN ASIENTO INT, OUT OK INT)
BEGIN
      DECLARE LUGAR INT;
      SELECT NO_ASIENTO INTO LUGAR
      FROM PDV_T_ASIENTO
      WHERE ID_CORRIDA = ORIGEN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = ORIGEN_FECHA AND NO_ASIENTO = ASIENTO;

      IF LUGAR IS NULL THEN
          SET OK = 0;
      END IF;

      IF NOT LUGAR IS NULL THEN
          SET OK = 1;
      END IF;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_APARTA_CORRIDA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_APARTA_CORRIDA`(IN IN_TRABID VARCHAR(10),IN IN_CORRIDA VARCHAR(15),
                                          IN IN_FECHA DATE)
BEGIN
    UPDATE PDV_T_CORRIDA_D SET TRAB_ID = NULL
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA AND TRAB_ID = 'NULL';


    UPDATE PDV_T_CORRIDA_D SET TRAB_ID = IN_TRABID
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA  AND TRAB_ID IS NULL;

    SELECT TRAB_ID
    FROM PDV_T_CORRIDA_D
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTO_BOLETO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTO_BOLETO`(IN IN_TERMINAL VARCHAR(5), IN IN_TRABID VARCHAR(7),
                                 IN IN_ESTATUS VARCHAR(1),IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                 IN IN_TARIFA DOUBLE, IN IN_FORMA_PAGO INTEGER, IN IN_TAQUILLA INTEGER,
                                 IN IN_TIPO_TARIFA VARCHAR(1), IN IN_CORRIDA VARCHAR(10), IN IN_FECHA DATE,
                                 IN IN_PASAJERO VARCHAR(80), IN IN_ASIENTO INTEGER, IN IN_OCUPANTE INTEGER,
                                 IN IN_FECHA_HORA VARCHAR(20))
BEGIN
    DECLARE IDBOLETO  INT;
    DECLARE EXISTE_ASIENTO INT DEFAULT 0;
    DECLARE IDASIENTO INT DEFAULT 0;
    DECLARE BOLETO_OK,ASIENTO_OK INT DEFAULT 0;
    DECLARE snameTableTest   VARCHAR(512);
    DECLARE sqlTable   VARCHAR(1024);

    CALL PDV_STORE_BUSCA_BOLETO_V(IN_CORRIDA,IN_FECHA,IN_ASIENTO,BOLETO_OK);

    IF BOLETO_OK = 0 THEN
      SELECT (COALESCE(MAX(ID_BOLETO),0) + 1)AS IDX INTO IDBOLETO FROM PDV_T_BOLETO WHERE TRAB_ID = IN_TRABID;

      INSERT INTO PDV_T_BOLETO(ID_BOLETO, ID_TERMINAL, TRAB_ID, ESTATUS,
                               ORIGEN, DESTINO, TARIFA, ID_FORMA_PAGO,
                               ID_TAQUILLA, TIPO_TARIFA, FECHA_HORA_BOLETO, ID_CORRIDA,
                               FECHA, NOMBRE_PASAJERO, NO_ASIENTO, ID_OCUPANTE)
      VALUES(IDBOLETO, IN_TERMINAL, IN_TRABID, IN_ESTATUS, IN_ORIGEN, IN_DESTINO, IN_TARIFA, IN_FORMA_PAGO,
             IN_TAQUILLA, IN_TIPO_TARIFA, NOW(), IN_CORRIDA, IN_FECHA, IN_PASAJERO, IN_ASIENTO, IN_OCUPANTE);

/*      SET snameTableTest  =CONCAT(IN_TRABID);
      SET @INSERTSTABLE = CONCAT('INSERT INTO',' ',snameTableTest,' ','(ID_BOLETO,ID_TERMINAL,TRAB_ID,',
                                 'IN_ESTATUS)',' ',
                                 'VALUES(',IDBOLETO,',','CCS',',''',snameTableTest,''');');
      PREPARE stmt1 FROM @INSERTSTABLE;
      EXECUTE stmt1;
      DEALLOCATE PREPARE stmt1;
*/

      CALL PDV_STORE_BUSCA_ASIENTO_V(IN_CORRIDA,IN_FECHA,IN_ASIENTO,ASIENTO_OK);
      IF ASIENTO_OK = 0 THEN
          INSERT INTO PDV_T_ASIENTO(ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO,
                                    TRAB_ID,ORIGEN,DESTINO,STATUS)
          VALUES(IN_CORRIDA,(SELECT CONCAT(IN_FECHA,' 00:00')),IN_ASIENTO,
                 IN_PASAJERO, IN_TRABID, IN_ORIGEN, IN_DESTINO,'V');
/*          VALUES(IN_CORRIDA, (SELECT CAST(CONCAT(FECHA,' ',HORA) AS DATETIME)FECHACORRIDA
                              FROM PDV_T_CORRIDA_D
                              WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA),IN_ASIENTO,
                 IN_PASAJERO, IN_TRABID, IN_ORIGEN, IN_DESTINO,'V');*/
      END IF;
--      SELECT INSERTSTABLE;
--      DELETE FROM PDV_T_ASIENTO
--      WHERE NOMBRE_PASAJERO = NULL AND TERMINAL_RESERVACION IS NULL AND TRAB_ID = IN_TRABID;
    END IF;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTO_BOLETO_NEW`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTO_BOLETO_NEW`(
                                 IN IN_TERMINAL VARCHAR(5),
                                 IN IN_TRABID VARCHAR(7),
                                 IN IN_ESTATUS VARCHAR(1),
                                 IN IN_ORIGEN VARCHAR(5),
                                 IN IN_DESTINO VARCHAR(5),
                                 IN IN_TARIFA DOUBLE,
                                 IN IN_FORMA_PAGO INTEGER,
                                 IN IN_TAQUILLA INTEGER,
                                 IN IN_TIPO_TARIFA VARCHAR(1),
                                 IN IN_CORRIDA VARCHAR(10),
                                 IN IN_FECHA DATE,
                                 IN IN_PASAJERO VARCHAR(80),
                                 IN IN_ASIENTO INTEGER,
                                 IN IN_OCUPANTE INTEGER,
                                 IN IN_FECHA_HORA VARCHAR(20))
BEGIN
    DECLARE IDBOLETO  INT;
    DECLARE EXISTE_ASIENTO INT DEFAULT 0;
    DECLARE IDASIENTO INT DEFAULT 0;
    DECLARE BOLETO_OK,ASIENTO_OK INT DEFAULT 0;
    CALL PDV_STORE_BUSCA_BOLETO_V(IN_CORRIDA,IN_FECHA,IN_ASIENTO,BOLETO_OK);
    IF BOLETO_OK = 0 THEN
      SELECT (COALESCE(MAX(ID_BOLETO),0) + 1)AS IDX INTO IDBOLETO FROM PDV_T_BOLETO WHERE TRAB_ID = IN_TRABID;
      INSERT INTO PDV_T_BOLETO(ID_BOLETO, ID_TERMINAL, TRAB_ID, ESTATUS,
                               ORIGEN, DESTINO, TARIFA, ID_FORMA_PAGO,
                               ID_TAQUILLA, TIPO_TARIFA, FECHA_HORA_BOLETO, ID_CORRIDA,
                               FECHA, NOMBRE_PASAJERO, NO_ASIENTO, ID_OCUPANTE)
      VALUES(IDBOLETO, IN_TERMINAL, IN_TRABID, IN_ESTATUS, IN_ORIGEN, IN_DESTINO, IN_TARIFA, IN_FORMA_PAGO,
             IN_TAQUILLA, IN_TIPO_TARIFA, NOW(), IN_CORRIDA, IN_FECHA, IN_PASAJERO, IN_ASIENTO, IN_OCUPANTE);
      CALL PDV_STORE_BUSCA_ASIENTO_V(IN_CORRIDA,IN_FECHA,IN_ASIENTO,ASIENTO_OK);
      IF ASIENTO_OK = 0 THEN
          INSERT INTO PDV_T_ASIENTO(ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO,
                                    TRAB_ID,ORIGEN,DESTINO,STATUS)
          VALUES(IN_CORRIDA, IN_FECHA, IN_ASIENTO,
                 IN_PASAJERO, IN_TRABID, IN_ORIGEN, IN_DESTINO,'V');
      END IF;
    END IF;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTO_NEW_DELETE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTO_NEW_DELETE`(IN IN_CORRIDA VARCHAR(10),   IN IN_FECHA VARCHAR(20), IN IN_ASIENTO INTEGER,
                                    IN IN_TRABID VARCHAR(8), IN IN_ORIGEN VARCHAR(8),
                                    IN IN_DESTINO VARCHAR(8), IN IN_STATUS CHAR(1), IN IN_NUEVO CHAR(1))
BEGIN
    IF IN_NUEVO = 'N' THEN
      INSERT INTO PDV_T_ASIENTO(ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, TRAB_ID, ORIGEN, DESTINO,STATUS)
      VALUES(IN_CORRIDA, IN_FECHA, IN_ASIENTO, IN_TRABID, IN_ORIGEN, IN_DESTINO, 'V');
    END IF;

    IF IN_NUEVO = 'D' THEN
        DELETE FROM PDV_T_ASIENTO
        WHERE ID_CORRIDA = IN_CORRIDA AND FECHA_HORA_CORRIDA = IN_FECHA AND NO_ASIENTO = IN_ASIENTO AND
          TRAB_ID = IN_TRABID AND STATUS = IN_STATUS;
    END IF;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTO_RESERVADO_PASAJERO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTO_RESERVADO_PASAJERO`(IN IN_FECHA_INPUT VARCHAR(20), IN IN_CORRIDA VARCHAR(10),
                                            IN IN_PASAJERO VARCHAR(40))
BEGIN
    SELECT A.NO_ASIENTO,
            CASE A.STATUS
                WHEN 'R' THEN 'R'
            END AS TEXTO
    FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON
                      (C.ID_CORRIDA = A.ID_CORRIDA AND C.FECHA = CAST(A.FECHA_HORA_CORRIDA AS DATE))
    WHERE A.FECHA_HORA_CORRIDA = CAST(IN_FECHA_INPUT AS DATETIME) AND A.ID_CORRIDA = IN_CORRIDA AND
          NOMBRE_PASAJERO = IN_PASAJERO;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTO_VENDIDO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTO_VENDIDO`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA DATETIME, IN ASIENTO INTEGER,
                                 IN IN_TRABID VARCHAR(7), IN IN_ORIGEN VARCHAR(5), IN DESTINO VARCHAR(5))
BEGIN
    INSERT INTO PDV_T_ASIENTO(ID_CORRIDA,FECHA_HORA_CORRIDA,NO_ASIENTO,TRAB_ID,ORIGEN,DESTINO)
    VALUES(IN_CORRIDA, IN_FECHA, ASIENTO, IN_TRABID, IN_ORIGEN, IN_DESTINO);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTOS_CANCELA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTOS_CANCELA`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA DATE, IN IN_TIME TIME)
BEGIN
    SELECT  NO_ASIENTO
    FROM PDV_T_ASIENTO
    WHERE ID_CORRIDA = IN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND
          CAST(FECHA_HORA_CORRIDA AS TIME) = IN_TIME
    ORDER BY NO_ASIENTO;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTOS_DISPONIBLES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTOS_DISPONIBLES`(IN IN_CORRIDA VARCHAR(10), IN FECHA_INPUT VARCHAR(25), IN_PIE INTEGER)
BEGIN
    IF IN_PIE = 0 THEN
        SELECT A.NO_ASIENTO,
                CASE A.STATUS
                    WHEN 'V' THEN CONCAT(A.ORIGEN, ' ' ,A.DESTINO)
                    WHEN 'R' THEN 'R'
                    WHEN 'A' THEN 'A'
                END AS TEXTO, A.STATUS
        FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON
                          (C.ID_CORRIDA = A.ID_CORRIDA AND C.FECHA = CAST(A.FECHA_HORA_CORRIDA AS DATE))
        WHERE CAST(A.FECHA_HORA_CORRIDA AS DATE) = CAST(FECHA_INPUT AS DATE) AND A.ID_CORRIDA = IN_CORRIDA AND
              A.NO_ASIENTO < 100;
    END IF;

    IF IN_PIE = 1 THEN
        SELECT A.NO_ASIENTO,
                CASE A.STATUS
                    WHEN 'V' THEN CONCAT(A.ORIGEN, ' ' ,A.DESTINO)
                    WHEN 'R' THEN 'R'
                    WHEN 'A' THEN 'A'
                END AS TEXTO, A.STATUS
        FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON
                          (C.ID_CORRIDA = A.ID_CORRIDA AND C.FECHA = CAST(A.FECHA_HORA_CORRIDA AS DATE))
        WHERE CAST(A.FECHA_HORA_CORRIDA AS DATE) = CAST(FECHA_INPUT AS DATE) AND A.ID_CORRIDA = IN_CORRIDA AND
              A.NO_ASIENTO > 100;
    END IF;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTOS_DISPONIBLES_CUALES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTOS_DISPONIBLES_CUALES`(IN IN_CORRIDA VARCHAR(10), IN FECHA_INPUT DATE, IN ASIENTO VARCHAR(40))
BEGIN
    SELECT A.NO_ASIENTO,
            CASE A.STATUS
                WHEN 'V' THEN CONCAT(A.ORIGEN, ' ' ,A.DESTINO)
                WHEN 'R' THEN 'R'
                WHEN 'A' THEN 'A'
            END AS TEXTO
    FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON
                      (C.ID_CORRIDA = A.ID_CORRIDA AND C.FECHA = CAST(A.FECHA_HORA_CORRIDA AS DATE))
    WHERE C.FECHA = FECHA_INPUT AND A.ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO IN (ASIENTO);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ASIENTOS_RESERVADOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ASIENTOS_RESERVADOS`(IN IN_CORRIDA VARCHAR(10), IN FECHA_INPUT VARCHAR(10), IN PASAJERO VARCHAR(40))
BEGIN
    SELECT NO_ASIENTO,
            CASE A.STATUS
                WHEN 'V' THEN CONCAT(A.ORIGEN, ' ' ,A.DESTINO)
                WHEN 'R' THEN 'R'
                WHEN 'A' THEN 'A'
            END AS TEXTO
    FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON
                      (C.ID_CORRIDA = A.ID_CORRIDA AND C.FECHA = CAST(A.FECHA_HORA_CORRIDA AS DATE))
    WHERE A.ID_CORRIDA = IN_CORRIDA AND CAST(A.FECHA_HORA_CORRIDA AS DATE) = FECHA_INPUT AND
           A.NOMBRE_PASAJERO = PASAJERO
    UNION
    SELECT NO_ASIENTO,
            CASE A.STATUS
                WHEN 'V' THEN CONCAT(A.ORIGEN, ' ' ,A.DESTINO)
                WHEN 'R' THEN 'R'
                WHEN 'A' THEN 'A'
            END AS TEXTO
    FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON
                      (C.ID_CORRIDA = A.ID_CORRIDA AND C.FECHA = CAST(A.FECHA_HORA_CORRIDA AS DATE))
    WHERE A.ID_CORRIDA = IN_CORRIDA AND CAST(A.FECHA_HORA_CORRIDA AS DATE) = FECHA_INPUT
    ORDER BY 1;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_AUTOLIBERABLE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_AUTOLIBERABLE`(IN PASAJERO VARCHAR(40), IN IN_CORRIDA VARCHAR(10),
                               IN FECHA VARCHAR(19), IN IN_ASIENTO INTEGER, IN IN_TERMINAL VARCHAR(10))
BEGIN
    UPDATE PDV_T_ASIENTO SET NOMBRE_PASAJERO = PASAJERO, TERMINAL_RESERVACION = IN_TERMINAL,
                             FECHA_HORA_ORIGEN = FECHA
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA_HORA_CORRIDA = CAST(FECHA AS DATETIME) AND NO_ASIENTO = IN_ASIENTO;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BOLETO_VENDIDO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BOLETO_VENDIDO`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA_INPUT VARCHAR(10),
                                      IN IN_ASIENTO INTEGER)
BEGIN
      SELECT B.ID_CORRIDA, B.ORIGEN, B.DESTINO, B.NO_ASIENTO, O.DESCRIPCION,
             B.TARIFA, B.FECHA, C.HORA, (S.DESCRIPCION)AS SERVICIO, B.ID_BOLETO, B.TRAB_ID, B.NOMBRE_PASAJERO,
             P.ABREVIACION, B.ID_TERMINAL, B.ID_FORMA_PAGO, B.TIPO_TARIFA, B.ID_TAQUILLA, B.FECHA_HORA_BOLETO, B.ID_OCUPANTE
      FROM PDV_T_BOLETO B INNER JOIN PDV_T_CORRIDA C ON B.ID_CORRIDA = C.ID_CORRIDA AND B.FECHA = C.FECHA
                          INNER JOIN PDV_C_OCUPANTE O ON O.ID_OCUPANTE = B.ID_OCUPANTE
                          INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                          INNER JOIN PDV_C_FORMA_PAGO P ON P.ID_FORMA_PAGO = B.ID_FORMA_PAGO
      WHERE B.ID_CORRIDA = IN_CORRIDA AND B.FECHA = IN_FECHA_INPUT AND B.NO_ASIENTO = IN_ASIENTO AND ESTATUS = 'V';
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BOLETO_VENDIDO_NEW`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BOLETO_VENDIDO_NEW`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA_INPUT VARCHAR(10),
                                      IN IN_ASIENTO INTEGER, IN IN_HORA VARCHAR(5), IN IN_SERVICIO VARCHAR(40))
BEGIN
      SELECT B.ID_CORRIDA, B.ORIGEN, B.DESTINO, B.NO_ASIENTO, O.DESCRIPCION,
             B.TARIFA, B.FECHA, (IN_HORA)AS HORA, (IN_SERVICIO)AS SERVICIO, B.ID_BOLETO, B.TRAB_ID, B.NOMBRE_PASAJERO,
             P.ABREVIACION, B.ID_TERMINAL, B.ID_FORMA_PAGO, B.TIPO_TARIFA, B.ID_TAQUILLA, B.FECHA_HORA_BOLETO, B.ID_OCUPANTE
      FROM PDV_T_BOLETO B INNER JOIN PDV_C_OCUPANTE O ON O.ID_OCUPANTE = B.ID_OCUPANTE
                          INNER JOIN PDV_C_FORMA_PAGO P ON P.ID_FORMA_PAGO = B.ID_FORMA_PAGO
      WHERE B.ID_CORRIDA = IN_CORRIDA AND B.FECHA = IN_FECHA_INPUT AND B.NO_ASIENTO = IN_ASIENTO AND ESTATUS = 'V';
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BOLETO_VENDIDO_USUARIO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BOLETO_VENDIDO_USUARIO`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA_INPUT VARCHAR(10),
                                      IN IN_ASIENTO INTEGER, IN IN_HORA VARCHAR(5), IN IN_SERVICIO VARCHAR(40),
                                      IN IN_TRABID VARCHAR(10))
BEGIN

      SELECT B.ID_CORRIDA, B.ORIGEN, B.DESTINO, B.NO_ASIENTO, O.DESCRIPCION,
             B.TARIFA, B.FECHA, (IN_HORA)AS HORA, (IN_SERVICIO)AS SERVICIO, B.ID_BOLETO, B.TRAB_ID, B.NOMBRE_PASAJERO,
             P.ABREVIACION, B.ID_TERMINAL, B.ID_FORMA_PAGO, B.TIPO_TARIFA, B.ID_TAQUILLA, B.FECHA_HORA_BOLETO, B.ID_OCUPANTE
      FROM IN_TRABID B

                          INNER JOIN PDV_C_OCUPANTE O ON O.ID_OCUPANTE = B.ID_OCUPANTE

                          INNER JOIN PDV_C_FORMA_PAGO P ON P.ID_FORMA_PAGO = B.ID_FORMA_PAGO
      WHERE B.ID_CORRIDA = IN_CORRIDA AND B.FECHA = IN_FECHA_INPUT AND B.NO_ASIENTO = IN_ASIENTO AND ESTATUS = 'V';
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BORRA_BUS_CORDENADA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BORRA_BUS_CORDENADA`(IN BUS_ID INTEGER)
BEGIN
    DELETE FROM PDV_C_TIPO_AUTOBUS_D WHERE ID_TIPO_AUTOBUS = BUS_ID;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BUSCA_ASIENTO_V`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BUSCA_ASIENTO_V`(IN IN_CORRIDA VARCHAR(15), IN IN_FECHA DATE, IN IN_ASIENTO INTEGER, OUT OK INTEGER)
BEGIN
    DECLARE LUGAR INT;
    SELECT NO_ASIENTO INTO LUGAR
    FROM PDV_T_ASIENTO
    WHERE ID_CORRIDA = IN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND NO_ASIENTO = IN_ASIENTO
        AND STATUS = 'V';
    IF LUGAR IS NULL THEN
        SET OK = 0;
    END IF;
    IF NOT LUGAR IS NULL THEN
        SET OK = 1;
    END IF;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BUSCA_BOLETO_V`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BUSCA_BOLETO_V`(IN IN_CORRIDA VARCHAR(15), IN IN_FECHA DATE, IN IN_ASIENTO INTEGER, OUT OK INTEGER)
BEGIN
    DECLARE LUGAR INT;
    SELECT NO_ASIENTO INTO LUGAR
    FROM PDV_T_BOLETO B
    WHERE B.ID_CORRIDA = IN_CORRIDA AND B.FECHA = IN_FECHA AND B.NO_ASIENTO = IN_ASIENTO AND ESTATUS = 'V';
    IF LUGAR IS NULL THEN
        SET OK = 0;
    END IF;
    IF NOT LUGAR IS NULL THEN
        SET OK = 1;
    END IF;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BUSCA_CUALES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BUSCA_CUALES`(IN IN_FECHA DATE, IN IN_CORRIDA VARCHAR(15),
                                                              IN IN_ASIENTOS VARCHAR(30))
BEGIN
      SELECT COUNT(NO_ASIENTO) AS NUMERO
      FROM PDV_T_ASIENTO A
      WHERE CAST(A.FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND A.ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO IN (IN_ASIENTOS);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BUSCA_CUALES_NEW`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BUSCA_CUALES_NEW`(IN IN_FECHA DATE, IN IN_CORRIDA VARCHAR(15),
                                                              IN IN_ASIENTOS VARCHAR(30))
BEGIN
      SELECT COUNT(NO_ASIENTO) AS NUMERO
      FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON (C.ID_CORRIDA = A.ID_CORRIDA AND C.FECHA = CAST(A.FECHA_HORA_CORRIDA AS DATE))
      WHERE CAST(A.FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND A.ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO IN (IN_ASIENTOS);

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BUSCA_CUALES_NEW_CUALES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BUSCA_CUALES_NEW_CUALES`(IN IN_FECHA DATE, IN IN_CORRIDA VARCHAR(15),
                                                              IN IN_ASIENTOS VARCHAR(50))
BEGIN
      SELECT NO_ASIENTO
      FROM PDV_T_ASIENTO
      WHERE CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND
                 ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO IN (IN_ASIENTOS);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BUSCA_POR_AUTOBUS_XY`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BUSCA_POR_AUTOBUS_XY`(IN IN_ID_BUS INTEGER)
BEGIN
    SELECT ASIENTO, X, Y
    FROM PDV_C_TIPO_AUTOBUS_D
    WHERE ID_TIPO_AUTOBUS = IN_ID_BUS;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_BUSCA_TOTAL_CUALES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_BUSCA_TOTAL_CUALES`(IN IN_FECHA DATE, IN IN_CORRIDA VARCHAR(15),
                                                              IN IN_ASIENTOS VARCHAR(1000))
BEGIN
      SELECT COALESCE(SUM(NO_ASIENTO),0) AS TOTAL
      FROM PDV_T_ASIENTO
      WHERE CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND
                 ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO IN (IN_ASIENTOS);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO`(IN IN_FOLIO INTEGER, IN IN_TRABID VARCHAR(10),
                 IN IN_TERMINAL VARCHAR(10), IN IN_TAQUILLA INTEGER,
                 IN IN_TRABVTA  VARCHAR(10), IN IN_AUTORIZA VARCHAR(10))
BEGIN
    DECLARE OUT_RUTA INTEGER DEFAULT 0;
    DECLARE OUT_ORIGEN VARCHAR(10);
    DECLARE OUT_DESTINO VARCHAR(10);
    DECLARE OUT_TRABID VARCHAR(10);
    DECLARE OUT_TERMINAL VARCHAR(10);
    DECLARE OUT_TARIFA DOUBLE;
    DECLARE OUT_FECHA DATE;
    DECLARE OUT_ASIENTO INTEGER;
    DECLARE OUT_CORRIDA VARCHAR(10);
    DECLARE OUT_FORMA INTEGER;

    SELECT C.ID_RUTA, B.ORIGEN, B.DESTINO, B.TRAB_ID, B.ID_TERMINAL, B.TARIFA, B.FECHA, B.NO_ASIENTO, B.ID_CORRIDA,
           B.ID_FORMA_PAGO
                                                                    INTO OUT_RUTA, OUT_ORIGEN,
                                                                         OUT_DESTINO, OUT_TRABID,
                                                                         OUT_TERMINAL, OUT_TARIFA, OUT_FECHA,
                                                                         OUT_ASIENTO, OUT_CORRIDA, OUT_FORMA
    FROM PDV_T_BOLETO B INNER JOIN PDV_T_ASIENTO A ON CAST(FECHA_HORA_CORRIDA AS DATE) = B.FECHA AND
                                                      B.ID_CORRIDA = A.ID_CORRIDA AND
                                                      B.NO_ASIENTO = A.NO_ASIENTO
                        INNER JOIN PDV_T_CORRIDA_D C ON CAST(A.FECHA_HORA_CORRIDA AS DATE) = C.FECHA AND
                                                      C.ID_CORRIDA = B.ID_CORRIDA
    WHERE B.ID_BOLETO = IN_FOLIO AND B.TRAB_ID = IN_TRABID AND B.ID_TERMINAL = IN_TERMINAL;

    IF OUT_RUTA > 0 THEN
      UPDATE PDV_T_BOLETO SET ESTATUS = 'C'
      WHERE ID_BOLETO = IN_FOLIO AND TRAB_ID = IN_TRABID AND ID_TERMINAL = IN_TERMINAL;

      DELETE FROM PDV_T_ASIENTO
      WHERE CAST(FECHA_HORA_CORRIDA AS DATE) = OUT_FECHA AND NO_ASIENTO = OUT_ASIENTO AND ID_CORRIDA = OUT_CORRIDA;

      INSERT INTO PDV_T_BOLETO_CANCELADO(ID_BOLETO, ID_TERMINAL, TRAB_ID_CANCELADO,
                                         FECHA_HORA_CANCELADO, ID_TAQUILLA, TRAB_ID, TRAB_ID_AUTORIZA)
      VALUES(IN_FOLIO,IN_TERMINAL,IN_TRABVTA,NOW(),IN_TAQUILLA,IN_TRABID,IN_AUTORIZA);
    END IF;

    IF OUT_RUTA = 0 THEN
        SET OUT_RUTA = 0;
        SET OUT_TARIFA = 0;
        SET OUT_ORIGEN = '';
        SET OUT_DESTINO = '';
        SET OUT_TRABID = '';
        SET OUT_TERMINAL = '';
    END IF;

    SELECT OUT_RUTA, OUT_ORIGEN, OUT_DESTINO, OUT_TRABID, OUT_TERMINAL, OUT_TARIFA, OUT_FORMA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO_ASIENTO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO_ASIENTO`(IN IN_FECHA VARCHAR(10), IN IN_CORRIDA VARCHAR(10), IN IN_ASIENTO INTEGER,
                                                  IN IN_PROMOTOR VARCHAR(10), IN IN_SUPERVISOR VARCHAR(10),
                                                  IN IN_TAQUILLA INTEGER)
BEGIN
    DECLARE OUT_BOLETO   INTEGER DEFAULT 0;
    DECLARE OUT_TARIFA   FLOAT   DEFAULT 0;
    DECLARE OUT_TRABID   VARCHAR(10);
    DECLARE OUT_TERMINAL VARCHAR(10);
    DECLARE OUT_TAQUILLA INTEGER DEFAULT 0;
    DECLARE OUT_DESTINO  VARCHAR(10);
    DECLARE OUT_RUTA     INTEGER;
    DECLARE OUT_FECHA    VARCHAR(10);
    DECLARE OUT_FORMA    INTEGER;

    SELECT B.ID_BOLETO, B.TARIFA, B.TRAB_ID, B.ID_TERMINAL, B.ID_TAQUILLA,
           B.DESTINO, D.ID_RUTA, B.FECHA, B.ID_FORMA_PAGO
                                        INTO OUT_BOLETO, OUT_TARIFA, OUT_TRABID,
                                             OUT_TERMINAL, OUT_TAQUILLA, OUT_DESTINO, OUT_RUTA, OUT_FECHA, OUT_FORMA
    FROM PDV_T_BOLETO B INNER JOIN PDV_T_CORRIDA D ON B.ID_CORRIDA = D.ID_CORRIDA AND
                                                      B.FECHA = D.FECHA
    WHERE B.FECHA = CAST(IN_FECHA AS DATE) AND B.ID_CORRIDA = IN_CORRIDA AND
          B.NO_ASIENTO = IN_ASIENTO AND B.ESTATUS = 'V';
    IF OUT_BOLETO > 0 THEN
        UPDATE PDV_T_BOLETO SET ESTATUS = 'C'
        WHERE FECHA = CAST(IN_FECHA AS DATE) AND ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO = IN_ASIENTO;

        DELETE
        FROM PDV_T_ASIENTO
        WHERE CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO = IN_ASIENTO;

        INSERT INTO PDV_T_BOLETO_CANCELADO
        VALUES(OUT_BOLETO, OUT_TERMINAL, IN_PROMOTOR, NOW(), IN_TAQUILLA, OUT_TRABID, IN_SUPERVISOR);
    END IF;
    IF OUT_BOLETO = 0 THEN
      SET OUT_TARIFA  = 0.0;
      SET OUT_BOLETO  = 0;
      SET OUT_DESTINO = '';
      SET OUT_RUTA    = 0;
    END IF;
    SELECT OUT_TARIFA, OUT_BOLETO, OUT_DESTINO, OUT_RUTA, OUT_FECHA, OUT_FORMA;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO_ASIENTO_LOCAL_BOLETO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO_ASIENTO_LOCAL_BOLETO`(IN IN_FECHA VARCHAR(10),
                                                  IN IN_CORRIDA VARCHAR(10), IN IN_ASIENTO INTEGER,
                                                  IN IN_PROMOTOR VARCHAR(10), IN IN_SUPERVISOR VARCHAR(10),
                                                  IN IN_TAQUILLA INTEGER)
BEGIN
    DECLARE OUT_BOLETO   INTEGER DEFAULT 0;
    DECLARE OUT_TARIFA   FLOAT   DEFAULT 0;
    DECLARE OUT_TRABID   VARCHAR(10);
    DECLARE OUT_TERMINAL VARCHAR(10);
    DECLARE OUT_TAQUILLA INTEGER DEFAULT 0;
    DECLARE OUT_DESTINO  VARCHAR(10);
    DECLARE OUT_RUTA     INTEGER;
    DECLARE OUT_FECHA    VARCHAR(10);
    DECLARE OUT_FORMA    INTEGER;

    SELECT B.ID_BOLETO, B.TARIFA, B.TRAB_ID, B.ID_TERMINAL, B.ID_TAQUILLA,
           B.DESTINO, B.FECHA, B.ID_FORMA_PAGO
    FROM PDV_T_BOLETO B
    WHERE B.FECHA = CAST(IN_FECHA AS DATE) AND B.ID_CORRIDA = IN_CORRIDA AND
          B.NO_ASIENTO = IN_ASIENTO AND B.ESTATUS = 'V';
    IF OUT_BOLETO > 0 THEN
        UPDATE PDV_T_BOLETO SET ESTATUS = 'C'
        WHERE FECHA = CAST(IN_FECHA AS DATE) AND ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO = IN_ASIENTO;
    END IF;
    IF OUT_BOLETO = 0 THEN
      SET OUT_TARIFA  = 0.0;
      SET OUT_BOLETO  = 0;
      SET OUT_DESTINO = '';
      SET OUT_RUTA    = 0;
    END IF;
    SELECT OUT_TARIFA, OUT_BOLETO, OUT_DESTINO, OUT_RUTA, OUT_FECHA, OUT_FORMA, OUT_TRABID;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO_ASIENTO_REMOTO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CANCELA_BOLETO_ASIENTO_REMOTO`(IN IN_FECHA VARCHAR(10), IN IN_CORRIDA VARCHAR(10), IN IN_ASIENTO INTEGER,
                                                  IN IN_PROMOTOR VARCHAR(10), IN IN_SUPERVISOR VARCHAR(10),
                                                  IN IN_TAQUILLA INTEGER)
BEGIN
    DECLARE OUT_BOLETO   INTEGER DEFAULT 0;
    DECLARE OUT_TARIFA   FLOAT   DEFAULT 0;
    DECLARE OUT_TRABID   VARCHAR(10);
    DECLARE OUT_TERMINAL VARCHAR(10);
    DECLARE OUT_TAQUILLA INTEGER DEFAULT 0;
    DECLARE OUT_DESTINO  VARCHAR(10);
    DECLARE OUT_RUTA     INTEGER;
    DECLARE OUT_FECHA    VARCHAR(10);
    DECLARE OUT_FORMA    INTEGER;

    SELECT B.ID_BOLETO, B.TARIFA, B.TRAB_ID, B.ID_TERMINAL, B.ID_TAQUILLA,
           B.DESTINO, D.ID_RUTA, B.FECHA, B.ID_FORMA_PAGO
                                        INTO OUT_BOLETO, OUT_TARIFA, OUT_TRABID,
                                             OUT_TERMINAL, OUT_TAQUILLA, OUT_DESTINO, OUT_RUTA, OUT_FECHA, OUT_FORMA
    FROM PDV_T_BOLETO B INNER JOIN PDV_T_CORRIDA D ON B.ID_CORRIDA = D.ID_CORRIDA AND
                                                      B.FECHA = D.FECHA
    WHERE B.FECHA = CAST(IN_FECHA AS DATE) AND B.ID_CORRIDA = IN_CORRIDA AND
          B.NO_ASIENTO = IN_ASIENTO AND B.ESTATUS = 'V';
    IF OUT_BOLETO > 0 THEN
        UPDATE PDV_T_BOLETO SET ESTATUS = 'C'
        WHERE FECHA = CAST(IN_FECHA AS DATE) AND ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO = IN_ASIENTO;

        DELETE
        FROM PDV_T_ASIENTO
        WHERE CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND ID_CORRIDA = IN_CORRIDA AND NO_ASIENTO = IN_ASIENTO;

--        INSERT INTO PDV_T_BOLETO_CANCELADO
--        VALUES(OUT_BOLETO, OUT_TERMINAL, IN_PROMOTOR, NOW(), IN_TAQUILLA, OUT_TRABID, IN_SUPERVISOR);
    END IF;
    IF OUT_BOLETO = 0 THEN
      SET OUT_TARIFA  = 0.0;
      SET OUT_BOLETO  = 0;
      SET OUT_DESTINO = '';
      SET OUT_RUTA    = 0;
    END IF;
    SELECT OUT_TARIFA, OUT_BOLETO, OUT_DESTINO, OUT_RUTA, OUT_FECHA, OUT_FORMA, OUT_TRABID;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CORRIDA_ACTUALIZADA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CORRIDA_ACTUALIZADA`(IN CORRIDA VARCHAR(10), IN EMPLEADO VARCHAR(7),
                                IN INPUT_FECHA DATE, IN INPUT_HORA TIME, IN TERMINAL VARCHAR(5))
BEGIN
      UPDATE PDV_T_CORRIDA_D SET TRAB_ID = EMPLEADO
      WHERE ID_CORRIDA = CORRIDA AND FECHA = INPUT_FECHA AND ID_TERMINAL = TERMINAL AND
            HORA = INPUT_HORA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CORRIDAS_IMPRESION`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CORRIDAS_IMPRESION`(IN IN_ORIGEN VARCHAR(5), IN FECHA_INPUT DATE)
BEGIN
      SELECT DISTINCT D.ID_CORRIDA,
            CONCAT((SELECT
                                CASE P.TIPO_CORRIDA
                                  WHEN 'E' THEN P.TIPO_CORRIDA
                                  WHEN 'N' THEN ''
                                  WHEN 'F' THEN ''
                                END AS TEXTO
                             FROM PDV_T_CORRIDA P
                    WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
              D.FECHA, T.DESTINO, D.HORA,(S.ABREVIACION)AS ABREVIA,
              (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
              D.ID_RUTA, (1)AS ID_TRAMO, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
              A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO
      FROM PDV_T_CORRIDA_D D INNER JOIN PDV_T_CORRIDA C ON C.FECHA = D.FECHA AND  C.ID_CORRIDA = D.ID_CORRIDA
                             INNER JOIN T_C_RUTA_D R ON R.ID_RUTA = D.ID_RUTA
                             INNER JOIN T_C_RUTA RU  ON RU.ID_RUTA = D.ID_RUTA
                             INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = R.ID_TRAMO
                             INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                             INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
      WHERE D.FECHA = FECHA_INPUT AND D.ESTATUS = 'D' AND
                  T.DESTINO =  RU.DESTINO AND D.ID_TERMINAL = IN_ORIGEN
      ORDER BY D.FECHA, D.HORA , R.ORDEN;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CUPO_RUTA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CUPO_RUTA`(IN_CORRIDA VARCHAR(10),IN_HORA VARCHAR(8),IN_FECHA VARCHAR(10),IN_TERMINAL VARCHAR(7),IN_RUTA INTEGER)
BEGIN
      SELECT (COALESCE(SUM(ID.CUPO),0)+
                    (SELECT CUPO
                    FROM PDV_T_CORRIDA_D C
                    WHERE C.ID_CORRIDA = IN_CORRIDA AND C.HORA = IN_HORA AND
                          C.ID_RUTA = IN_RUTA AND C.FECHA = IN_FECHA) ) AS CUPO
      FROM PDV_C_ITINERARIO_D ID
      WHERE ID_TERMINAL IN (
                          SELECT T.ORIGEN
                          FROM T_C_RUTA_D RD INNER JOIN T_C_TRAMO T ON RD.ID_TRAMO = T.ID_TRAMO
                          WHERE RD.ID_RUTA = IN_RUTA AND RD.ORDEN < (
                                SELECT D.ORDEN
                                FROM PDV_T_CORRIDA_D C INNER JOIN T_C_RUTA R ON C.ID_RUTA = R.ID_RUTA
                                                     INNER JOIN T_C_RUTA_D D ON R.ID_RUTA = D.ID_RUTA
                                                     INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = D.ID_TRAMO
                                WHERE C.ID_CORRIDA = IN_CORRIDA AND C.HORA = IN_HORA AND R.ID_RUTA = IN_RUTA AND C.FECHA = IN_FECHA
                                      AND T.ORIGEN = IN_TERMINAL
                                )
                          );
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_CUPO_RUTA_NEW`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_CUPO_RUTA_NEW`(IN IN_TERMINAL VARCHAR(10),IN IN_RUTA INTEGER, IN IN_SERVICIO INTEGER)
BEGIN
     SELECT DISTINCT(ID_TERMINAL), DI.CUPO
          FROM PDV_C_ITINERARIO I INNER JOIN PDV_C_ITINERARIO_D DI ON I.ID_CORRIDA = DI.ID_CORRIDA
          WHERE I.ID_RUTA = IN_RUTA AND I.TIPOSERVICIO = IN_SERVICIO AND DI.ID_TERMINAL IN (
                        SELECT T.ORIGEN
                        FROM T_C_RUTA_D RD INNER JOIN T_C_TRAMO T ON RD.ID_TRAMO = T.ID_TRAMO
                        WHERE RD.ID_RUTA = IN_RUTA AND RD.ORDEN <= (SELECT D.ORDEN
                                                               FROM T_C_RUTA_D D INNER JOIN T_C_TRAMO T ON D.ID_TRAMO = T.ID_TRAMO
                                                               WHERE D.ID_RUTA = IN_RUTA AND T.ORIGEN = IN_TERMINAL)
                        ORDER BY ORDEN
                        );
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_DESCUENTO_OCUPANTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_DESCUENTO_OCUPANTE`(IN IN_ABREVIA VARCHAR(1))
BEGIN
    SELECT O.ID_OCUPANTE,O.DESCRIPCION, O.DESCUENTO FROM PDV_C_OCUPANTE O
    WHERE O.ABREVIACION = IN_ABREVIA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_ESTATUS_CORRIDA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_ESTATUS_CORRIDA`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA VARCHAR(10))
BEGIN
    SELECT ESTATUS
    FROM PDV_T_CORRIDA_D
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_FOR_CANCELAR`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_FOR_CANCELAR`(IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                                     IN FECHA_INPUT DATE, IN IN_CORRIDA VARCHAR(10))
BEGIN
      SELECT DISTINCT B.ID_CORRIDA,
            CONCAT((SELECT
                    CASE TIPO_CORRIDA
                        WHEN 'E' THEN TIPO_CORRIDA
                        WHEN 'N' THEN ''
                        WHEN 'F' THEN ''
                    END AS TEXTO
                ),' ', HORA)AS TIPO, C.FECHA, B.DESTINO, C.HORA,
        (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(C.FECHA,' ',C.HORA) AS DATETIME)))AS COMPARA,
        (S.ABREVIACION)AS ABREVIA, (1)AS ID_TRAMO, C.ID_RUTA, C.ID_CORRIDA, C.ID_TIPO_AUTOBUS, AU.NOMBRE_IMAGEN,
        AU.ASIENTOS, C.TIPOSERVICIO,0
      FROM PDV_T_BOLETO B INNER JOIN PDV_T_CORRIDA C ON C.ID_CORRIDA = B.ID_CORRIDA AND C.FECHA = B.FECHA
                        INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                        INNER JOIN T_C_RUTA R ON R.ID_RUTA = C.ID_RUTA
                        INNER JOIN PDV_C_TIPO_AUTOBUS AU ON C.ID_TIPO_AUTOBUS = AU.ID_TIPO_AUTOBUS
                        INNER JOIN PDV_T_ASIENTO A ON A.ID_CORRIDA = C.ID_CORRIDA AND CAST(A.FECHA_HORA_CORRIDA AS DATE) = C.FECHA
      WHERE B.ORIGEN = IN_ORIGEN AND B.DESTINO = IN_DESTINO AND B.FECHA = FECHA_INPUT AND B.ID_CORRIDA = IN_CORRIDA;


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_HISTORICOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_HISTORICOS`(IN IN_CORRIDA VARCHAR(10), IN FECHA_INPUT VARCHAR(25))
BEGIN
    SELECT DISTINCT(A.NO_ASIENTO),
            CASE A.STATUS
                WHEN 'V' THEN CONCAT(A.ORIGEN, ' ' ,A.DESTINO)
                WHEN 'R' THEN 'R'
                WHEN 'A' THEN 'A'
            END AS TEXTO, A.STATUS
    FROM PDV_T_ASIENTO A INNER JOIN PDV_T_BOLETO B ON A.ID_CORRIDA = B.ID_CORRIDA AND
                                                      CAST(FECHA_HORA_CORRIDA AS DATE) = B.FECHA
    WHERE  B.ID_CORRIDA = IN_CORRIDA AND B.FECHA = FECHA_INPUT AND B.ESTATUS = 'V'
    ORDER BY NO_ASIENTO;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_LIBERA_CORRIDA_UNICA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_LIBERA_CORRIDA_UNICA`(IN IN_TRABID VARCHAR(10),IN IN_CORRIDA VARCHAR(15),
                                          IN IN_FECHA DATE)
BEGIN
    UPDATE PDV_T_CORRIDA_D SET TRAB_ID = NULL
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA AND TRAB_ID = 'NULL';
    UPDATE PDV_T_CORRIDA_D SET TRAB_ID = NULL
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA  AND TRAB_ID = IN_TRABID;
    IF IN_TRABID = 'N' THEN
        UPDATE PDV_T_CORRIDA_D SET TRAB_ID = NULL
        WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA;
    END IF;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_LIBERA_CORRIDAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_LIBERA_CORRIDAS`(IN_ORIGEN VARCHAR(5))
BEGIN
    SELECT DISTINCT(D.ID_CORRIDA),
        CONCAT((SELECT
                    CASE P.TIPO_CORRIDA
                      WHEN 'E' THEN P.TIPO_CORRIDA
                      WHEN 'N' THEN ''
                      WHEN 'F' THEN ''
                    END AS TEXTO
                 FROM PDV_T_CORRIDA P WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
    D.FECHA, T.DESTINO, D.HORA,
    (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA
    , (S.ABREVIACION)AS ABREVIA, T.ID_TRAMO, D.ID_RUTA, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
    A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO,
                      0,
    D.TRAB_ID
    FROM PDV_T_CORRIDA_D D INNER JOIN T_C_RUTA R ON R.ID_RUTA = D.ID_RUTA
                           INNER JOIN T_C_RUTA_D RD ON RD.ID_RUTA = R.ID_RUTA
                           INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = RD.ID_TRAMO
                           INNER JOIN PDV_C_TARIFA TA ON TA.ID_TRAMO = T.ID_TRAMO
                           INNER JOIN PDV_C_TARIFA_D TD ON TD.ID_TARIFA = TA.ID_TARIFA
                           INNER JOIN PDV_T_CORRIDA C ON C.ID_CORRIDA = D.ID_CORRIDA AND
                                                         C.FECHA = D.FECHA
                           INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                           INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
    WHERE T.ORIGEN = IN_ORIGEN AND D.FECHA BETWEEN CAST(NOW() AS DATE)  AND (SELECT (CURRENT_DATE() + INTERVAL (1) DAY))
                                    AND D.ESTATUS = 'A' AND D.TRAB_ID IS NOT NULL
    ORDER BY D.FECHA, D.HORA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_MUESTRA_CORRIDAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_MUESTRA_CORRIDAS`(IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                                     IN FECHA_INPUT DATE, IN FECHA_SIGUIENTE DATE)
BEGIN


    IF LENGTH(IN_DESTINO) > 0 THEN
        IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') = DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
            SELECT DISTINCT D.ID_CORRIDA,
                  CONCAT((SELECT
                                      CASE P.TIPO_CORRIDA
                                        WHEN 'E' THEN P.TIPO_CORRIDA
                                        WHEN 'N' THEN ''
                                        WHEN 'F' THEN ''
                                      END AS TEXTO
                                   FROM PDV_T_CORRIDA P
                          WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
                    D.FECHA, T.DESTINO, D.HORA,(S.ABREVIACION)AS ABREVIA,
                    (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
                    D.ID_RUTA, (1)AS ID_TRAMO, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
                    A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO
            FROM PDV_T_CORRIDA_D D INNER JOIN PDV_T_CORRIDA C ON C.FECHA = D.FECHA AND C.ID_CORRIDA = D.ID_CORRIDA
                                   INNER JOIN T_C_RUTA_D R ON R.ID_RUTA = D.ID_RUTA
                                   INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = R.ID_TRAMO
                                   INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                                   INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
            WHERE D.FECHA BETWEEN CAST(NOW() AS DATE) AND FECHA_SIGUIENTE AND
                              D.ESTATUS = 'A' AND T.DESTINO =  IN_DESTINO AND D.ID_TERMINAL = IN_ORIGEN
            ORDER BY D.FECHA, D.HORA , R.ORDEN;
        END IF;

        IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') != DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
            SELECT DISTINCT D.ID_CORRIDA,
                  CONCAT((SELECT
                                      CASE P.TIPO_CORRIDA
                                        WHEN 'E' THEN P.TIPO_CORRIDA
                                        WHEN 'N' THEN ''
                                        WHEN 'F' THEN ''
                                      END AS TEXTO
                                   FROM PDV_T_CORRIDA P
                          WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
                    D.FECHA, T.DESTINO, D.HORA,(S.ABREVIACION)AS ABREVIA,
                    (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
                    D.ID_RUTA, (1)AS ID_TRAMO, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
                    A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO
            FROM PDV_T_CORRIDA_D D INNER JOIN PDV_T_CORRIDA C ON C.FECHA = D.FECHA AND C.ID_CORRIDA = D.ID_CORRIDA
                                   INNER JOIN T_C_RUTA_D R ON R.ID_RUTA = D.ID_RUTA
                                   INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = R.ID_TRAMO
                                   INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                                   INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
            WHERE D.FECHA BETWEEN FECHA_INPUT AND FECHA_SIGUIENTE AND
                              D.ESTATUS = 'A' AND T.DESTINO =  IN_DESTINO AND D.ID_TERMINAL = IN_ORIGEN
            ORDER BY D.FECHA, D.HORA , R.ORDEN;
        END IF;
    END IF;



   IF LENGTH(IN_DESTINO) = 0 THEN
        IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') = DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
            SELECT DISTINCT D.ID_CORRIDA,
                  CONCAT((SELECT
                                      CASE P.TIPO_CORRIDA
                                        WHEN 'E' THEN P.TIPO_CORRIDA
                                        WHEN 'N' THEN ''
                                        WHEN 'F' THEN ''
                                      END AS TEXTO
                                   FROM PDV_T_CORRIDA P
                          WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
                    D.FECHA, T.DESTINO, D.HORA,(S.ABREVIACION)AS ABREVIA,
                    (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
                    D.ID_RUTA, (1)AS ID_TRAMO, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
                    A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO
            FROM PDV_T_CORRIDA_D D INNER JOIN PDV_T_CORRIDA C ON C.FECHA = D.FECHA AND  C.ID_CORRIDA = D.ID_CORRIDA
                                   INNER JOIN T_C_RUTA_D R ON R.ID_RUTA = D.ID_RUTA
                                   INNER JOIN T_C_RUTA RU  ON RU.ID_RUTA = D.ID_RUTA
                                   INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = R.ID_TRAMO
                                   INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                                   INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
            WHERE D.FECHA BETWEEN CAST(NOW() AS DATE)  AND FECHA_SIGUIENTE AND D.ESTATUS = 'A' AND
                        T.DESTINO =  RU.DESTINO AND D.ID_TERMINAL = IN_ORIGEN
            ORDER BY D.FECHA, D.HORA , R.ORDEN;


        END IF;
        IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') != DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
            SELECT DISTINCT D.ID_CORRIDA,
                  CONCAT((SELECT
                                      CASE P.TIPO_CORRIDA
                                        WHEN 'E' THEN P.TIPO_CORRIDA
                                        WHEN 'N' THEN ''
                                        WHEN 'F' THEN ''
                                      END AS TEXTO
                                   FROM PDV_T_CORRIDA P
                          WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
                    D.FECHA, T.DESTINO, D.HORA,(S.ABREVIACION)AS ABREVIA,
                    (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
                    D.ID_RUTA, (1)AS ID_TRAMO, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
                    A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO
            FROM PDV_T_CORRIDA_D D INNER JOIN PDV_T_CORRIDA C ON C.FECHA = D.FECHA AND C.ID_CORRIDA = D.ID_CORRIDA
                                   INNER JOIN T_C_RUTA_D R ON R.ID_RUTA = D.ID_RUTA
                                   INNER JOIN T_C_RUTA RU  ON RU.ID_RUTA = D.ID_RUTA
                                   INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = R.ID_TRAMO
                                   INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                                   INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
            WHERE D.FECHA BETWEEN FECHA_INPUT AND FECHA_SIGUIENTE AND D.ESTATUS = 'A' AND
                        T.DESTINO =  RU.DESTINO AND D.ID_TERMINAL = IN_ORIGEN
            ORDER BY D.FECHA, D.HORA , R.ORDEN;

        END IF;

   END IF;


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_MUESTRA_CORRIDAS_HISTORICAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_MUESTRA_CORRIDAS_HISTORICAS`(IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                                     IN FECHA_INPUT DATE, IN FECHA_SIGUIENTE DATE)
BEGIN
    IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') = DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
        SELECT DISTINCT D.ID_CORRIDA,
              CONCAT((SELECT
                                  CASE P.TIPO_CORRIDA
                                    WHEN 'E' THEN P.TIPO_CORRIDA
                                    WHEN 'N' THEN ''
                                    WHEN 'F' THEN ''
                                  END AS TEXTO
                               FROM PDV_T_CORRIDA P
                      WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
                D.FECHA, T.DESTINO, D.HORA,(S.ABREVIACION)AS ABREVIA,
                (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
                D.ID_RUTA, (1)AS ID_TRAMO, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
                A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO
        FROM PDV_T_CORRIDA_D D INNER JOIN PDV_T_CORRIDA C ON C.FECHA = D.FECHA AND  C.ID_CORRIDA = D.ID_CORRIDA
                               INNER JOIN T_C_RUTA_D R ON R.ID_RUTA = D.ID_RUTA
                               INNER JOIN T_C_RUTA RU  ON RU.ID_RUTA = D.ID_RUTA
                               INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = R.ID_TRAMO
                               INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                               INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
        WHERE D.FECHA BETWEEN CAST(NOW() AS DATE)  AND FECHA_SIGUIENTE AND 
                    T.DESTINO =  RU.DESTINO AND D.ID_TERMINAL = IN_ORIGEN
        ORDER BY D.FECHA, D.HORA , R.ORDEN;
    END IF;
    IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') != DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
        SELECT DISTINCT D.ID_CORRIDA,
              CONCAT((SELECT
                                  CASE P.TIPO_CORRIDA
                                    WHEN 'E' THEN P.TIPO_CORRIDA
                                    WHEN 'N' THEN ''
                                    WHEN 'F' THEN ''
                                  END AS TEXTO
                               FROM PDV_T_CORRIDA P
                      WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
                D.FECHA, T.DESTINO, D.HORA,(S.ABREVIACION)AS ABREVIA,
                (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
                D.ID_RUTA, (1)AS ID_TRAMO, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
                A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO
        FROM PDV_T_CORRIDA_D D INNER JOIN PDV_T_CORRIDA C ON C.FECHA = D.FECHA AND C.ID_CORRIDA = D.ID_CORRIDA
                               INNER JOIN T_C_RUTA_D R ON R.ID_RUTA = D.ID_RUTA
                               INNER JOIN T_C_RUTA RU  ON RU.ID_RUTA = D.ID_RUTA
                               INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = R.ID_TRAMO
                               INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                               INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
        WHERE D.FECHA BETWEEN FECHA_INPUT AND FECHA_SIGUIENTE AND 
                    T.DESTINO =  RU.DESTINO AND D.ID_TERMINAL = IN_ORIGEN
        ORDER BY D.FECHA, D.HORA , R.ORDEN;
    END IF;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_MUESTRA_PREDESPACHO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_MUESTRA_PREDESPACHO`(IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                                     IN FECHA_INPUT DATE, IN FECHA_SIGUIENTE DATE)
BEGIN

   IF LENGTH(IN_DESTINO) = 0 THEN
        IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') = DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
          SELECT
              CONCAT((SELECT
                          CASE P.TIPO_CORRIDA
                            WHEN 'E' THEN P.TIPO_CORRIDA
                            WHEN 'N' THEN ''
                            WHEN 'F' THEN ''
                          END AS TEXTO
                       FROM PDV_T_CORRIDA P WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
          D.FECHA, TR.DESTINO, D.HORA,
          ( (SELECT (CAST(DATE_FORMAT(current_timestamp(),'%H:%i:%s') AS TIME))AS HORA ) <= D.HORA)AS COMPARA,
          (SELECT S.ABREVIACION FROM SERVICIOS S INNER JOIN PDV_T_CORRIDA C ON S.TIPOSERVICIO = C.TIPOSERVICIO
           WHERE C.ID_CORRIDA = D.ID_CORRIDA AND D.FECHA = C.FECHA)AS ABREVIA,
          RD.ID_TRAMO, R.ID_RUTA, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS, A.NOMBRE_IMAGEN, A.ASIENTOS, C.TIPOSERVICIO,
          D.ESTATUS
          FROM PDV_T_CORRIDA_D D INNER JOIN T_C_TERMINAL T ON D.ID_TERMINAL = T.ID_TERMINAL
                                 INNER JOIN T_C_RUTA   R ON D.ID_RUTA     = R.ID_RUTA
                                 INNER JOIN T_C_RUTA_D RD ON RD.ID_RUTA = R.ID_RUTA
                                 INNER JOIN T_C_TRAMO TR ON TR.ID_TRAMO = RD.ID_TRAMO
                                 INNER JOIN PDV_T_CORRIDA C ON (C.ID_CORRIDA = D.ID_CORRIDA AND D.FECHA = C.FECHA)
                                 INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
          WHERE TR.ORIGEN = IN_ORIGEN AND D.FECHA BETWEEN CAST(NOW() AS DATE) AND FECHA_SIGUIENTE
          ORDER BY D.FECHA, D.HORA;
        END IF;
        IF  DATE_FORMAT(FECHA_INPUT,'%Y %m %d') != DATE_FORMAT(NOW(  ),'%Y %m %d')  THEN
          SELECT
              CONCAT((SELECT
                          CASE P.TIPO_CORRIDA
                            WHEN 'E' THEN P.TIPO_CORRIDA
                            WHEN 'N' THEN ''
                            WHEN 'F' THEN ''
                          END AS TEXTO
                       FROM PDV_T_CORRIDA P WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
          D.FECHA, TR.DESTINO, D.HORA,
          ( (SELECT (CAST(DATE_FORMAT(current_timestamp(),'%H:%i:%s') AS TIME))AS HORA ) <= D.HORA)AS COMPARA,
          (SELECT S.ABREVIACION FROM SERVICIOS S INNER JOIN PDV_T_CORRIDA C ON S.TIPOSERVICIO = C.TIPOSERVICIO
           WHERE C.ID_CORRIDA = D.ID_CORRIDA AND D.FECHA = C.FECHA)AS ABREVIA,
          RD.ID_TRAMO, R.ID_RUTA, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS, A.NOMBRE_IMAGEN, A.ASIENTOS, C.TIPOSERVICIO,
          D.ESTATUS
          FROM PDV_T_CORRIDA_D D INNER JOIN T_C_TERMINAL T ON D.ID_TERMINAL = T.ID_TERMINAL
                                 INNER JOIN T_C_RUTA   R ON D.ID_RUTA     = R.ID_RUTA
                                 INNER JOIN T_C_RUTA_D RD ON RD.ID_RUTA = R.ID_RUTA
                                 INNER JOIN T_C_TRAMO TR ON TR.ID_TRAMO = RD.ID_TRAMO
                                 INNER JOIN PDV_T_CORRIDA C ON (C.ID_CORRIDA = D.ID_CORRIDA AND D.FECHA = C.FECHA)
                                 INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
          WHERE TR.ORIGEN = IN_ORIGEN AND D.FECHA BETWEEN FECHA_INPUT AND FECHA_SIGUIENTE
          ORDER BY D.FECHA, D.HORA;
        END IF;

   END IF;


END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_NO_AUTOLIBERABLE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_NO_AUTOLIBERABLE`(IN PASAJERO VARCHAR(40), IN IN_CORRIDA VARCHAR(10),
                               IN FECHA VARCHAR(19), IN IN_ASIENTO INTEGER, IN IN_TERMINAL VARCHAR(10))
BEGIN
    UPDATE PDV_T_ASIENTO SET NOMBRE_PASAJERO = PASAJERO, STATUS = 'A', TERMINAL_RESERVACION = IN_TERMINAL,
                             FECHA_HORA_ORIGEN = FECHA 
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA_HORA_CORRIDA = CAST(FECHA AS DATETIME) AND NO_ASIENTO = IN_ASIENTO;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_PASAJERO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_PASAJERO`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA_INPUT VARCHAR(10),
                                      IN IN_ASIENTO INTEGER)
BEGIN
    SELECT NOMBRE_PASAJERO
    FROM PDV_T_ASIENTO
    WHERE ID_CORRIDA = IN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA_INPUT AND NO_ASIENTO = IN_ASIENTO;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_REGISTRA_BOLETO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_REGISTRA_BOLETO`(IN IN_BOLETO INTEGER, IN IN_TERMINAL VARCHAR(5), IN IN_TRABID VARCHAR(7),
                                 IN IN_ESTATUS VARCHAR(1),IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                 IN IN_TARIFA DOUBLE, IN IN_FORMA_PAGO INTEGER, IN IN_TAQUILLA INTEGER,
                                 IN IN_TIPO_TARIFA VARCHAR(1), IN IN_CORRIDA VARCHAR(10), IN IN_FECHA DATE,
                                 IN IN_PASAJERO VARCHAR(80), IN IN_ASIENTO INTEGER, IN IN_OCUPANTE INTEGER,
                                 IN IN_FECHA_HORA VARCHAR(20))
BEGIN
    DECLARE ACTUAL DATETIME;
    DECLARE IDBOLETO  INT;
    SET ACTUAL = NOW();

    SELECT (COALESCE(MAX(ID_BOLETO),0) + 1)AS IDX INTO IDBOLETO FROM PDV_T_BOLETO WHERE TRAB_ID = IN_TRABID;


    INSERT INTO PDV_T_BOLETO(ID_BOLETO, ID_TERMINAL, TRAB_ID, ESTATUS,
                             ORIGEN, DESTINO, TARIFA, ID_FORMA_PAGO,
                             ID_TAQUILLA, TIPO_TARIFA, FECHA_HORA_BOLETO, ID_CORRIDA,
                             FECHA, NOMBRE_PASAJERO, NO_ASIENTO, ID_OCUPANTE)
    VALUES(IDBOLETO
            , IN_TERMINAL, IN_TRABID, IN_ESTATUS,
           IN_ORIGEN, IN_DESTINO, IN_TARIFA, IN_FORMA_PAGO,
           IN_TAQUILLA, IN_TIPO_TARIFA, NOW(), IN_CORRIDA,
           IN_FECHA, IN_PASAJERO, IN_ASIENTO, IN_OCUPANTE);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_REGISTRA_BOLETO_NEW`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_REGISTRA_BOLETO_NEW`(IN IN_BOLETO INTEGER, IN IN_TERMINAL VARCHAR(5), IN IN_TRABID VARCHAR(7),
                                 IN IN_ESTATUS VARCHAR(1),IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5),
                                 IN IN_TARIFA DOUBLE, IN IN_FORMA_PAGO INTEGER, IN IN_TAQUILLA INTEGER,
                                 IN IN_TIPO_TARIFA VARCHAR(1), IN IN_CORRIDA VARCHAR(10), IN IN_FECHA DATE,
                                 IN IN_PASAJERO VARCHAR(40), IN IN_ASIENTO INTEGER, IN IN_OCUPANTE INTEGER,
                                 IN IN_FECHA_HORA VARCHAR(20))
BEGIN
    DECLARE ACTUAL DATETIME;
    DECLARE IDBOLETO  INT;
    SET ACTUAL = NOW();

    SELECT (COALESCE(MAX(ID_BOLETO),0) + 1)AS IDX INTO IDBOLETO FROM PDV_T_BOLETO WHERE TRAB_ID = IN_TRABID;


    INSERT INTO PDV_T_BOLETO(ID_BOLETO, ID_TERMINAL, TRAB_ID, ESTATUS,
                             ORIGEN, DESTINO, TARIFA, ID_FORMA_PAGO,
                             ID_TAQUILLA, TIPO_TARIFA, FECHA_HORA_BOLETO, ID_CORRIDA,
                             FECHA, NOMBRE_PASAJERO, NO_ASIENTO, ID_OCUPANTE)
    VALUES(IDBOLETO, IN_TERMINAL, IN_TRABID, IN_ESTATUS, IN_ORIGEN, IN_DESTINO, IN_TARIFA, IN_FORMA_PAGO,
           IN_TAQUILLA, IN_TIPO_TARIFA, NOW(), IN_CORRIDA, IN_FECHA, IN_PASAJERO, IN_ASIENTO, IN_OCUPANTE);

    SELECT B.ID_CORRIDA, B.ORIGEN, B.DESTINO, B.NO_ASIENTO, O.DESCRIPCION,
           B.TARIFA, B.FECHA, C.HORA, (S.DESCRIPCION)AS SERVICIO, B.ID_BOLETO, B.TRAB_ID, B.NOMBRE_PASAJERO,
           P.ABREVIACION
    FROM PDV_T_BOLETO B INNER JOIN PDV_T_CORRIDA C ON B.ID_CORRIDA = C.ID_CORRIDA AND B.FECHA = C.FECHA
                        INNER JOIN PDV_C_OCUPANTE O ON O.ID_OCUPANTE = B.ID_OCUPANTE
                        INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                        INNER JOIN PDV_C_FORMA_PAGO P ON P.ID_FORMA_PAGO = B.ID_FORMA_PAGO
    WHERE B.ID_CORRIDA = IN_CORRIDA AND B.FECHA = IN_FECHA AND B.NO_ASIENTO = IN_ASIENTO AND ESTATUS = 'V';
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_REGISTRA_CORTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_REGISTRA_CORTE`(IN IN_TRABID VARCHAR(10), IN IN_TERMINAL VARCHAR(10),
                                                                IN IN_TAQUILLA INTEGER )
BEGIN
    DECLARE OUT_ESTATUS  VARCHAR(1);
    DECLARE OUT_TAQUILLA INTEGER;
    DECLARE OUT_CORTE    INTEGER;
    DECLARE OUT_OK       INTEGER;
      INSERT INTO PDV_T_CORTE
       SELECT IN_TERMINAL,(COALESCE(MAX(ID_CORTE),0) +1), IN_TAQUILLA,
              ( SELECT E.TRAB_ID
                FROM PDV_C_USUARIO E
                WHERE NOT EXISTS ( SELECT ID_CORTE
                               FROM PDV_T_CORTE WHERE ID_EMPLEADO = IN_TRABID AND
                               ESTATUS IN ('A','S','P')
                    ) AND E.TRAB_ID = IN_TRABID
          ), NOW(),NULL, 'A', NULL, NULL FROM PDV_T_CORTE;
      DELETE FROM PDV_T_CORTE WHERE ID_EMPLEADO = '';
      SELECT ESTATUS, ID_TAQUILLA, ID_CORTE INTO OUT_ESTATUS, OUT_TAQUILLA, OUT_CORTE
      FROM PDV_T_CORTE
      WHERE ID_EMPLEADO = IN_TRABID AND ESTATUS IN ('A','S','P');
      IF OUT_ESTATUS = 'A' THEN
          IF OUT_TAQUILLA <> IN_TAQUILLA THEN
                SET OUT_OK = 0; 
          END IF;
          IF OUT_TAQUILLA = IN_TAQUILLA THEN
                SET OUT_OK = 1; 
          END IF;
      END IF;
      IF OUT_ESTATUS = 'S' THEN
          IF OUT_TAQUILLA = IN_TAQUILLA THEN
                SET OUT_OK = 2; 
                UPDATE PDV_T_CORTE SET ESTATUS = 'A'
                WHERE ESTATUS  IN ('S') AND ID_EMPLEADO = IN_TRABID AND ID_CORTE = OUT_CORTE;
          END IF;
          IF OUT_TAQUILLA <> IN_TAQUILLA THEN
                SET OUT_OK = 3; 
                UPDATE PDV_T_CORTE SET ESTATUS = 'A', ID_TAQUILLA = IN_TAQUILLA
                WHERE ESTATUS  IN ('S') AND ID_EMPLEADO = IN_TRABID AND ID_CORTE = OUT_CORTE;
          END IF;
      END IF;

      IF OUT_ESTATUS = 'P' THEN
          SET OUT_OK = 4; 
      END IF;

      SELECT ID_CORTE, ID_EMPLEADO, ESTATUS, ID_TAQUILLA, FONDO_INICIAL, OUT_OK
      FROM PDV_T_CORTE
      WHERE ESTATUS IN ('A','P') AND ID_EMPLEADO = IN_TRABID;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_REGISTRA_DUPLICADO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_REGISTRA_DUPLICADO`(IN IN_CORRIDA VARCHAR(10),   IN IN_FECHA VARCHAR(10), IN IN_ASIENTO INTEGER,
                                    IN IN_PAX VARCHAR(40), IN IN_TERMINAL VARCHAR(5), IN IN_TRABID VARCHAR(7),
                                    IN IN_ORIGEN VARCHAR(5), IN IN_DESTINO VARCHAR(5), IN IN_STATUS VARCHAR(1),
                                    IN IN_FECHA_ORIGEN VARCHAR(20))
BEGIN
    DECLARE done INT DEFAULT 0;
    DECLARE cur CURSOR FOR SELECT ID_CORRIDA, FECHA_HORA_CORRIDA, NO_ASIENTO, NOMBRE_PASAJERO,
                           TERMINAL_RESERVACION, TRAB_ID, ORIGEN, DESTINO, STATUS, FECHA_HORA_ORIGEN
                    FROM PDV_T_ASIENTO
                    WHERE ID_CORRIDA = IN_CORRIDA AND CAST(FECHA_HORA_CORRIDA AS DATE) = IN_FECHA;
    DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_RESERVA_ASIENTO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_RESERVA_ASIENTO`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA VARCHAR(19), IN IN_ASIENTO INTEGER,
                                 IN IN_TERMINAL VARCHAR(5), IN TRABID VARCHAR(10), IN IN_ORIGEN VARCHAR(5),
                                 IN IN_DESTINO VARCHAR(5))
BEGIN
    INSERT INTO PDV_T_ASIENTO(ID_CORRIDA,FECHA_HORA_CORRIDA,NO_ASIENTO,TERMINAL_RESERVACION,
                              TRAB_ID, ORIGEN, DESTINO,STATUS)
    VALUES(IN_CORRIDA,CAST(IN_FECHA AS DATETIME),IN_ASIENTO,IN_TERMINAL,TRABID,IN_ORIGEN,IN_DESTINO,'R');
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_RESERVADOS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_RESERVADOS`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA VARCHAR(10),
                                      IN IN_HORA VARCHAR(8), IN IN_DESTINO VARCHAR(5))
BEGIN
        SELECT DISTINCT A.ID_CORRIDA,
                    CONCAT((SELECT
                                CASE P.TIPO_CORRIDA
                                  WHEN 'E' THEN P.TIPO_CORRIDA
                                  WHEN 'N' THEN ''
                                  WHEN 'F' THEN ''
                                END AS TEXTO
                             FROM PDV_T_CORRIDA P
                WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO, D.FECHA, A.DESTINO, D.HORA,
                (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA,
               (S.ABREVIACION)AS ABREVIA, (1)AS ID_TRAMO , D.ID_RUTA, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
                AU.NOMBRE_IMAGEN,AU.ASIENTOS,C.TIPOSERVICIO, 0
        FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA_D D ON A.ID_CORRIDA = D.ID_CORRIDA AND
                                                        CAST(A.FECHA_HORA_CORRIDA AS DATE) = D.FECHA AND
                                                        CAST(A.FECHA_HORA_CORRIDA AS TIME) = D.HORA
                            INNER JOIN PDV_T_CORRIDA C ON D.FECHA = C.FECHA AND D.ID_CORRIDA = C.ID_CORRIDA
                            INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                            INNER JOIN T_C_RUTA R ON R.ID_RUTA = D.ID_RUTA
                            INNER JOIN PDV_C_TIPO_AUTOBUS AU ON C.ID_TIPO_AUTOBUS = AU.ID_TIPO_AUTOBUS
        WHERE D.ID_CORRIDA = IN_CORRIDA AND D.FECHA = CAST(IN_FECHA AS DATE) AND D.HORA = CAST(IN_HORA AS TIME) AND
            A.DESTINO = IN_DESTINO AND A.STATUS IN ('R','A')
        ORDER BY D.FECHA, D.HORA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_RUTAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_RUTAS`(IN ENTRADA VARCHAR(1))
BEGIN
    SELECT D.ID_RUTA, D.ORDEN, T.ID_TRAMO, ORIGEN,DESTINO, DESCRIPCION
    FROM T_C_RUTA_D D INNER JOIN T_C_TRAMO T ON  T.ID_TRAMO = D.ID_TRAMO
                      INNER JOIN T_C_TERMINAL TE ON TE.ID_TERMINAL = T.DESTINO
    ORDER BY 1;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_RUTAS_TARIFA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_RUTAS_TARIFA`(IN INPUT INTEGER)
BEGIN
      SELECT D.ID_RUTA, D.ORDEN, T.ID_TRAMO, ORIGEN,DESTINO,ID_SERVICIO,
                      ((SELECT MONTO FROM PDV_C_TARIFA_D D
                        WHERE D.ID_TARIFA = TA.ID_TARIFA AND
                              D.FECHA_HORA_APLICA <= NOW()))AS MONTO
      FROM T_C_RUTA_D D INNER JOIN T_C_TRAMO T ON  T.ID_TRAMO = D.ID_TRAMO
                        INNER JOIN PDV_C_TARIFA TA ON TA.ID_TRAMO = T.ID_TRAMO
      ORDER BY 1;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_SHOW_CUPO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_SHOW_CUPO`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA DATE, IN IN_TERMINAL VARCHAR(5))
BEGIN
    SELECT CUPO FROM PDV_T_CORRIDA_D
    WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA AND ID_TERMINAL = IN_TERMINAL;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA`(IN IN_RUTA INTEGER)
BEGIN
      SELECT  D.ORDEN, (T.ORIGEN)AS DESTINO, TE.DESCRIPCION
      FROM T_C_RUTA R INNER JOIN T_C_RUTA_D D ON R.ID_RUTA = D.ID_RUTA
                      INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = D.ID_TRAMO
                      INNER JOIN T_C_TERMINAL TE ON TE.ID_TERMINAL = T.ORIGEN
      WHERE R.ID_RUTA = IN_RUTA
      UNION
      SELECT D.ORDEN, T.DESTINO, TE.DESCRIPCION
      FROM T_C_RUTA R INNER JOIN T_C_RUTA_D D ON R.ID_RUTA = D.ID_RUTA
                      INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = D.ID_TRAMO
                      INNER JOIN T_C_TERMINAL TE ON TE.ID_TERMINAL = T.DESTINO
      WHERE R.ID_RUTA = IN_RUTA AND ORDEN = (
                SELECT MAX(D.ORDEN)
                FROM T_C_RUTA R INNER JOIN T_C_RUTA_D D ON R.ID_RUTA = D.ID_RUTA
                WHERE R.ID_RUTA = IN_RUTA

                )
      ORDER BY ORDEN;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA_NEW1`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA_NEW1`(IN IN_RUTA INTEGER)
BEGIN
      SELECT  D.ORDEN, (T.ORIGEN)AS DESTINO, TE.DESCRIPCION
      FROM T_C_RUTA R INNER JOIN T_C_RUTA_D D ON R.ID_RUTA = D.ID_RUTA
                      INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = D.ID_TRAMO
                      INNER JOIN T_C_TERMINAL TE ON TE.ID_TERMINAL = T.ORIGEN
      WHERE R.ID_RUTA = IN_RUTA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA_NEW2`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA_NEW2`(IN IN_RUTA INTEGER)
BEGIN
      SELECT D.ORDEN, T.DESTINO, TE.DESCRIPCION
      FROM T_C_RUTA R INNER JOIN T_C_RUTA_D D ON R.ID_RUTA = D.ID_RUTA
                      INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = D.ID_TRAMO
                      INNER JOIN T_C_TERMINAL TE ON TE.ID_TERMINAL = T.DESTINO
      WHERE R.ID_RUTA = IN_RUTA AND ORDEN = (
                SELECT MAX(D.ORDEN)
                FROM T_C_RUTA R INNER JOIN T_C_RUTA_D D ON R.ID_RUTA = D.ID_RUTA
                WHERE R.ID_RUTA = IN_RUTA);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA_ORIGEN`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_SHOW_DETALLE_RUTA_ORIGEN`(IN IN_RUTA INTEGER)
BEGIN
      SELECT D.ORDEN, (T.ORIGEN)AS DESTINO, TE.DESCRIPCION
      FROM T_C_RUTA_D D INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = D.ID_TRAMO
                        INNER JOIN T_C_TERMINAL TE ON TE.ID_TERMINAL = T.ORIGEN
      WHERE ID_RUTA = IN_RUTA AND ORDEN = 1;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_SHOW_OCUPANTES`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_SHOW_OCUPANTES`(IN IN_TERMINAL VARCHAR(5), IN IN_FECHA DATE, IN IN_CORRIDA VARCHAR(10))
BEGIN
    DECLARE DIA_INICIO, DIA_FINAL DATE;
    DECLARE CONTADOR  INT;
    SELECT (COUNT(ID_PERIODO_VACACIONAL))AS TOTAL INTO CONTADOR FROM PDV_C_PERIODO_VACACIONAL WHERE FECHA_INICIO <= IN_FECHA AND FECHA_FIN >= IN_FECHA;

    SELECT FECHA_INICIO, FECHA_FIN INTO DIA_INICIO, DIA_FINAL FROM PDV_C_PERIODO_VACACIONAL;
      IF (CONTADOR = 1) THEN
            SELECT O.DESCRIPCION, ((CO.MAXIMO-(SELECT COUNT(ID_OCUPANTE)
                                               FROM PDV_T_BOLETO B
                                               WHERE CAST(B.FECHA_HORA_BOLETO AS DATE) = CAST(IN_FECHA AS DATE) AND B.ID_CORRIDA = IN_CORRIDA AND
                                                     B.ESTATUS = 'V' AND B.ID_OCUPANTE = O.ID_OCUPANTE)
             )) AS TOTAL
            FROM PDV_C_OCUPANTE O INNER JOIN PDV_T_CORRIDA_OCUPANTE CO ON O.ID_OCUPANTE = CO.ID_OCUPANTE
            WHERE CO.ID_CORRIDA = IN_CORRIDA AND CO.FECHA = CAST(IN_FECHA AS DATE) AND O.ID_OCUPANTE NOT IN (1)
          UNION
            SELECT O.DESCRIPCION,((SELECT ASIENTOS
                                 FROM PDV_T_CORRIDA C INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
                                 WHERE ID_CORRIDA = CO.ID_CORRIDA AND FECHA = CO.FECHA) -
                       COALESCE((SELECT COUNT(ID_BOLETO)
                                 FROM PDV_T_BOLETO B
                                 WHERE ID_CORRIDA = CO.ID_CORRIDA AND ESTATUS = 'V' AND B.ID_OCUPANTE = O.ID_OCUPANTE AND B.FECHA = CAST(IN_FECHA AS DATE)),0))AS TOTAL
            FROM PDV_C_OCUPANTE O INNER JOIN PDV_T_CORRIDA_OCUPANTE CO ON O.ID_OCUPANTE = CO.ID_OCUPANTE
            WHERE CO.ID_CORRIDA = IN_CORRIDA AND CO.FECHA = CAST(IN_FECHA AS DATE) AND O.ID_OCUPANTE IN (1)
          UNION
            SELECT 'PIE',((PIE - (SELECT COALESCE(COUNT(NO_ASIENTO),0)
                      FROM PDV_T_ASIENTO
                      WHERE NO_ASIENTO > 100 AND ID_CORRIDA = IN_CORRIDA AND STATUS = 'V' AND CAST(FECHA_HORA_CORRIDA AS DATE) = CAST(IN_FECHA AS DATE) )))AS TOTAL
            FROM PDV_T_CORRIDA_D
            WHERE ID_CORRIDA = IN_CORRIDA  AND FECHA = CAST(IN_FECHA AS DATE) AND ID_TERMINAL = IN_TERMINAL
            ORDER BY 1;
    END IF;
    IF (CONTADOR = 0) THEN
            SELECT DESCRIPCION , (0) AS TOTAL
            FROM PDV_C_OCUPANTE O
            WHERE ID_OCUPANTE  IN (2,3)
        UNION
            SELECT DESCRIPCION,
                       ((SELECT ASIENTOS
                         FROM PDV_T_CORRIDA C INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
                         WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = CAST(IN_FECHA AS DATE))  -
               COALESCE((SELECT COUNT(ID_BOLETO)
                         FROM PDV_T_BOLETO B
                         WHERE ID_CORRIDA = IN_CORRIDA AND ESTATUS = 'V' AND B.ID_OCUPANTE = O.ID_OCUPANTE AND B.FECHA = CAST(IN_FECHA AS DATE)),0)) AS TOTAL
            FROM PDV_C_OCUPANTE O
            WHERE O.ID_OCUPANTE IN (1)
        UNION
           SELECT DESCRIPCION,
           ((COALESCE((SELECT CO.MAXIMO FROM PDV_T_CORRIDA_OCUPANTE CO
                      WHERE CO.ID_CORRIDA = IN_CORRIDA AND FECHA = CAST(IN_FECHA AS DATE) AND CO.ID_OCUPANTE = O.ID_OCUPANTE AND
                               CO.ID_TERMINAL = IN_TERMINAL),0) -
                     (SELECT COUNT(*) FROM PDV_T_BOLETO B
                      WHERE B.FECHA = CAST(IN_FECHA AS DATE) AND B.ID_OCUPANTE = O.ID_OCUPANTE AND
                      ESTATUS = 'V' AND ORIGEN = IN_TERMINAL AND ID_CORRIDA = IN_CORRIDA)))AS TOTAL
           FROM PDV_C_OCUPANTE O
           WHERE O.ID_OCUPANTE  NOT IN (1,2,3)
        UNION
            SELECT 'PIE',((PIE - (SELECT COALESCE(COUNT(NO_ASIENTO),0)
                      FROM PDV_T_ASIENTO
                      WHERE NO_ASIENTO > 100 AND ID_CORRIDA = IN_CORRIDA AND STATUS = 'V' AND CAST(FECHA_HORA_CORRIDA AS DATE) = CAST(IN_FECHA AS DATE) ))) AS TOTAL
            FROM PDV_T_CORRIDA_D
            WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = CAST(IN_FECHA AS DATE) AND ID_TERMINAL = IN_TERMINAL
        ORDER BY 1;
    END IF;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_STATUS_CORRIDAS`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_STATUS_CORRIDAS`(IN_ORIGEN VARCHAR(10))
BEGIN
    SELECT DISTINCT(D.ID_CORRIDA),
        CONCAT((SELECT
                    CASE P.TIPO_CORRIDA
                      WHEN 'E' THEN P.TIPO_CORRIDA
                      WHEN 'N' THEN ''
                      WHEN 'F' THEN ''
                    END AS TEXTO
                 FROM PDV_T_CORRIDA P WHERE P.ID_CORRIDA = D.ID_CORRIDA AND P.FECHA = D.FECHA),' ',D.HORA)  AS TIPO,
    D.FECHA, R.DESTINO, D.HORA,
    (SELECT CURRENT_TIMESTAMP() <= (CAST(CONCAT(D.FECHA,' ',D.HORA) AS DATETIME)))AS COMPARA
    , (S.ABREVIACION)AS ABREVIA, T.ID_TRAMO, D.ID_RUTA, D.ID_CORRIDA, C.ID_TIPO_AUTOBUS,
    A.NOMBRE_IMAGEN,A.ASIENTOS,C.TIPOSERVICIO, 0,
    D.TRAB_ID, D.ESTATUS
    FROM PDV_T_CORRIDA_D D INNER JOIN T_C_RUTA R ON R.ID_RUTA = D.ID_RUTA
                           INNER JOIN T_C_RUTA_D RD ON RD.ID_RUTA = R.ID_RUTA
                           INNER JOIN T_C_TRAMO T ON T.ID_TRAMO = RD.ID_TRAMO
                           INNER JOIN PDV_T_CORRIDA C ON C.ID_CORRIDA = D.ID_CORRIDA AND
                                                         C.FECHA = D.FECHA
                           INNER JOIN SERVICIOS S ON S.TIPOSERVICIO = C.TIPOSERVICIO
                           INNER JOIN PDV_C_TIPO_AUTOBUS A ON C.ID_TIPO_AUTOBUS = A.ID_TIPO_AUTOBUS
    WHERE T.ORIGEN = IN_ORIGEN AND D.FECHA BETWEEN CAST(NOW() AS DATE)  AND (SELECT (CURRENT_DATE() + INTERVAL (1) DAY))

    ORDER BY   D.FECHA, D.HORA;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_TARIFA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_TARIFA`(IN IN_ORIGEN VARCHAR(9), IN IN_DESTINO VARCHAR(9), IN IN_ABREVIA VARCHAR(20))
BEGIN
    SELECT MONTO
    FROM PDV_C_TARIFA T INNER JOIN SERVICIOS S ON T.ID_SERVICIO = S.TIPOSERVICIO
                       INNER JOIN PDV_C_TARIFA_D D ON D.ID_TARIFA = T.ID_TARIFA
    WHERE T.ID_TRAMO = (SELECT T.ID_TRAMO FROM T_C_TRAMO T WHERE T.ORIGEN = IN_ORIGEN AND T.DESTINO = IN_DESTINO)
           AND S.ABREVIACION = IN_ABREVIA AND FECHA_HORA_APLICA <= NOW()
    ORDER BY FECHA_HORA_APLICA DESC
    LIMIT 1;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_TARIFA_FINAL`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_TARIFA_FINAL`(IN IN_ORIGEN VARCHAR(9), IN IN_DESTINO VARCHAR(9), IN IN_SERVICIO INTEGER)
BEGIN
    SELECT MONTO
    FROM PDV_C_TARIFA T INNER JOIN SERVICIOS S ON T.ID_SERVICIO = S.TIPOSERVICIO
                       INNER JOIN PDV_C_TARIFA_D D ON D.ID_TARIFA = T.ID_TARIFA
    WHERE T.ID_TRAMO = (SELECT T.ID_TRAMO FROM T_C_TRAMO T WHERE T.ORIGEN = IN_ORIGEN AND T.DESTINO = IN_DESTINO)
           AND S.TIPOSERVICIO = IN_SERVICIO AND FECHA_HORA_APLICA <= NOW()
    ORDER BY FECHA_HORA_APLICA DESC
    LIMIT 1;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_TOTAL_PAX`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_TOTAL_PAX`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA_INPUT VARCHAR(10))
BEGIN
      SELECT (COALESCE(COUNT(NO_ASIENTO),0))AS TOTAL
      FROM PDV_T_BOLETO
      WHERE ID_CORRIDA = IN_CORRIDA AND FECHA = IN_FECHA_INPUT;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_UPDATE_BOLETO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_UPDATE_BOLETO`(IN IN_CORRIDA VARCHAR(10), IN IN_FECHA DATE, IN IN_HORA TIME,
                                         IN IN_ASIENTO INTEGER, OUT OUT_BOLETO INTEGER,
                                         OUT OUT_TERMINAL VARCHAR(5), OUT OUT_TRABID VARCHAR(10))
BEGIN
    UPDATE PDV_T_CORRIDA C INNER JOIN PDV_T_BOLETO B ON C.ID_CORRIDA = B.ID_CORRIDA
    SET B.ESTATUS = 'C'
    WHERE C.ID_CORRIDA = IN_CORRIDA AND C.FECHA = IN_FECHA AND C.HORA = IN_HORA AND B.NO_ASIENTO = IN_ASIENTO;



    SELECT B.ID_BOLETO, B.ID_TERMINAL, B.TRAB_ID INTO OUT_BOLETO, OUT_TERMINAL, OUT_TRABID
    FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON A.ID_CORRIDA = C.ID_CORRIDA AND
                                      CAST(A.FECHA_HORA_CORRIDA AS DATE) = C.FECHA AND
                                      CAST(A.FECHA_HORA_CORRIDA AS TIME) = C.HORA
                         INNER JOIN PDV_T_BOLETO B ON B.ID_CORRIDA = C.ID_CORRIDA AND B.FECHA = C.FECHA AND
                                                      B.NO_ASIENTO = A.NO_ASIENTO
    WHERE A.ID_CORRIDA = IN_CORRIDA AND CAST(A.FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND
          A.NO_ASIENTO = IN_ASIENTO AND C.HORA = IN_HORA;



    DELETE A.*
    FROM PDV_T_ASIENTO A INNER JOIN PDV_T_CORRIDA C ON A.ID_CORRIDA = C.ID_CORRIDA AND
                                      CAST(A.FECHA_HORA_CORRIDA AS DATE) = C.FECHA AND
                                      CAST(A.FECHA_HORA_CORRIDA AS TIME) = C.HORA
                         INNER JOIN PDV_T_BOLETO B ON B.ID_CORRIDA = C.ID_CORRIDA AND B.FECHA = C.FECHA AND
                                                      B.NO_ASIENTO = A.NO_ASIENTO
    WHERE A.ID_CORRIDA = IN_CORRIDA AND CAST(A.FECHA_HORA_CORRIDA AS DATE) = IN_FECHA AND
          A.NO_ASIENTO = IN_ASIENTO AND C.HORA = IN_HORA;

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_STORE_VERIFICA_CORRIDA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_STORE_VERIFICA_CORRIDA`(IN IN_CORRIDA VARCHAR(10), IN INPUT_FECHA DATE, IN INPUT_HORA TIME, IN TERMINAL VARCHAR(5))
BEGIN

    SELECT (CONCAT(E.PATERNO,' ', E.MATERNO,' ',E.NOMBRES))AS NOMBRE,D.TRAB_ID
    FROM PDV_T_CORRIDA_D D INNER JOIN EMPLEADOS E ON D.TRAB_ID = E.TRAB_ID
    WHERE D.ID_CORRIDA = IN_CORRIDA AND D.FECHA = CAST(INPUT_FECHA AS DATE) AND D.ID_TERMINAL = TERMINAL AND
          D.HORA = CAST(INPUT_HORA AS TIME);
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PDV_TOTAL_BOLETOS_CORTE`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PDV_TOTAL_BOLETOS_CORTE`(IN _EMPLEADO VARCHAR(10), IN FI DATETIME, IN FF DATETIME, _TERMINAL VARCHAR(10))
BEGIN

SELECT ((SELECT  COALESCE(COUNT(*),0)
FROM PDV_T_BOLETO AS BOL
WHERE FECHA_HORA_BOLETO BETWEEN FI AND  FF
AND TRAB_ID = _EMPLEADO AND ID_TERMINAL = _TERMINAL) -
       (SELECT  COALESCE(COUNT(*),0)
FROM PDV_T_BOLETO_CANCELADO AS CANC
WHERE FECHA_HORA_CANCELADO BETWEEN FI AND FF
AND TRAB_ID_CANCELADO = _EMPLEADO AND ID_TERMINAL= _TERMINAL)) AS TOTAL;





  
  
  
  
  

END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`PRUEBA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`PRUEBA`(IN IN_TRABID VARCHAR(10))
BEGIN
      DECLARE snameTableTest   VARCHAR(512);
      DECLARE sqlTable   VARCHAR(1024);
      DECLARE ID_BOLETO  INTEGER DEFAULT 1;
      DECLARE IN_ORIGEN  VARCHAR(10);
      DECLARE IN_DESTINO  VARCHAR(10);
      DECLARE IN_TARIFA DOUBLE;
      DECLARE IN_FORMA_PAGO INTEGER;
      DECLARE IN_TAQUILLA INTEGER;
      DECLARE IN_TIPO_TARIFA CHAR;
      DECLARE ID_CORRIDA VARCHAR(10);
      DECLARE IN_FECHA   VARCHAR(10);
      DECLARE IN_PASAJERO VARCHAR(10);
      DECLARE IN_ASIENTO INTEGER;
      DECLARE EVENTO DATETIME;
      DECLARE IN_OCUPANTE INTEGER;

      SET IN_ORIGEN = 'CCS';
      SET IN_DESTINO = 'MEX';
      SET IN_TARIFA = 80.00;
      SET IN_FORMA_PAGO = 1;
      SET IN_TAQUILLA = 1;
      SET IN_TIPO_TARIFA = 'A';
      SET ID_CORRIDA = '1001';
      SET IN_FECHA = '2011-04-07';
      SET IN_PASAJERO = '----';
      SET IN_ASIENTO = 10;
      SET sqlTable  =CONCAT(IN_TRABID);
      SET EVENTO = NOW();
      SET IN_OCUPANTE = 3;
      SET snameTableTest = CONCAT('INSERT INTO',' ',sqlTable,' ','(ID_BOLETO,ID_TERMINAL,TRAB_ID,ESTATUS,',
                                  'ORIGEN,DESTINO,TARIFA,ID_FORMA_PAGO,ID_TAQUILLA,TIPO_TARIFA,FECHA_HORA_BOLETO,',
                                  'ID_CORRIDA,FECHA,NOMBRE_PASAJERO,NO_ASIENTO,ID_OCUPANTE)',' ',
                                 'VALUES(',ID_BOLETO,',','''',IN_ORIGEN,'''',',''',sqlTable,''',','''V'',',
                                 '''',IN_ORIGEN,''',','''',IN_DESTINO,''',',IN_TARIFA,',',IN_FORMA_PAGO,',',
                                 IN_TAQUILLA,',''',IN_TIPO_TARIFA,''',''',EVENTO,''',''',ID_CORRIDA,''',','''',
                                 IN_FECHA,''',''',IN_PASAJERO,''',',IN_ASIENTO,',',IN_OCUPANTE,');');
      SELECT snameTableTest;
      PREPARE stmt1 FROM @snameTableTest;
      EXECUTE stmt1;
      DEALLOCATE PREPARE stmt1;

      SELECT snameTableTest;

--      SELECT * FROM root;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`TARIFA_TRAMO`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`TARIFA_TRAMO`(IN ID_TRAMO INTEGER, IN IN_SERVICIO VARCHAR(18))
BEGIN
    SELECT MONTO, MAX(FECHA_HORA_APLICA)
    FROM PDV_C_TARIFA T INNER JOIN SERVICIOS S ON T.ID_SERVICIO = S.TIPOSERVICIO
                        INNER JOIN PDV_C_TARIFA_D D ON D.ID_TARIFA = T.ID_TARIFA
    WHERE T.ID_TRAMO = ID_TRAMO AND S.TIPOSERVICIO = IN_SERVICIO AND FECHA_HORA_APLICA < NOW()
    GROUP BY MONTO;
END $$

DELIMITER ;

DELIMITER $$

DROP PROCEDURE IF EXISTS `CORPORATIVO`.`VERIFICA_CORRIDA`$$
CREATE DEFINER=`venta`@`%` PROCEDURE  `CORPORATIVO`.`VERIFICA_CORRIDA`(IN IN_CORRIDA INTEGER, IN INPUT_FECHA DATE, IN INPUT_HORA TIME, IN TERMINAL VARCHAR(5))
BEGIN

    SELECT (CONCAT(E.PATERNO,' ', E.MATERNO,' ',E.NOMBRES))AS NOMBRE,D.TRAB_ID
    FROM PDV_T_CORRIDA_D D INNER JOIN EMPLEADOS E ON D.TRAB_ID = E.TRAB_ID
    WHERE D.ID_CORRIDA = IN_CORRIDA AND D.FECHA = CAST(INPUT_FECHA AS DATE) AND D.ID_TERMINAL = TERMINAL AND
          D.HORA = CAST(INPUT_HORA AS TIME);
END $$

DELIMITER ;